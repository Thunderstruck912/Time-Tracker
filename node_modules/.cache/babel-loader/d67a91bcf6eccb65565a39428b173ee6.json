{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bouku\\\\Desktop\\\\Time Tracker\\\\time-tracker\\\\src\\\\components\\\\ResetCount\\\\ResetCount.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport classes from \"./ResetCount.module.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { resetTimeAction } from \"../../store/timeReducer\";\nimport { setStatusAction } from \"../../store/timerStatus\";\nimport { resetPause } from \"../../utilites/timerSettings\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ResetCount = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const status = useSelector(state => state.status.littlePause);\n  const totalCount = useSelector(state => state.totalCount.totalCount);\n\n  const resetRound = () => {\n    dispatch(setStatusAction(false));\n    if (!status.littlePause) dispatch(resetTimeAction());\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.skip_wrapper,\n    children: !status ? /*#__PURE__*/_jsxDEV(\"span\", {\n      onClick: resetRound,\n      children: \"\\u041E\\u0431\\u043D\\u043E\\u0432\\u0438\\u0442\\u044C \\u0442\\u0430\\u0439\\u043C\\u0435\\u0440\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n      onClick: () => dispatch(resetPause({\n        totalCount\n      })),\n      children: \"\\u041E\\u0431\\u043D\\u043E\\u0432\\u0438\\u0442\\u044C \\u043F\\u0430\\u0443\\u0437\\u0443\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 3\n  }, this);\n};\n\n_s(ResetCount, \"QZXoui/w/p+StmQCMUmxgjwKShQ=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = ResetCount;\nexport default ResetCount;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResetCount\");","map":{"version":3,"sources":["C:/Users/bouku/Desktop/Time Tracker/time-tracker/src/components/ResetCount/ResetCount.jsx"],"names":["React","classes","useSelector","useDispatch","resetTimeAction","setStatusAction","resetPause","ResetCount","dispatch","status","state","littlePause","totalCount","resetRound","skip_wrapper"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAAQC,eAAR,QAA8B,yBAA9B;AACA,SAAQC,eAAR,QAA8B,yBAA9B;AACA,SAAQC,UAAR,QAAyB,8BAAzB;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACxB,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAMM,MAAM,GAAGP,WAAW,CAAEQ,KAAD,IAAWA,KAAK,CAACD,MAAN,CAAaE,WAAzB,CAA1B;AACA,QAAMC,UAAU,GAAGV,WAAW,CAAEQ,KAAD,IAAWA,KAAK,CAACE,UAAN,CAAiBA,UAA7B,CAA9B;;AAEA,QAAMC,UAAU,GAAG,MAAM;AACxBL,IAAAA,QAAQ,CAACH,eAAe,CAAC,KAAD,CAAhB,CAAR;AACA,QAAI,CAACI,MAAM,CAACE,WAAZ,EAAyBH,QAAQ,CAACJ,eAAe,EAAhB,CAAR;AACzB,GAHD;;AAKA,sBACC;AAAK,IAAA,SAAS,EAAEH,OAAO,CAACa,YAAxB;AAAA,cACE,CAACL,MAAD,gBACA;AAAM,MAAA,OAAO,EAAEI,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,gBAGA;AAAM,MAAA,OAAO,EAAE,MAAML,QAAQ,CAACF,UAAU,CAAC;AAACM,QAAAA;AAAD,OAAD,CAAX,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,UADD;AAWA,CArBD;;GAAML,U;UACYJ,W,EACFD,W,EACIA,W;;;KAHdK,U;AAuBN,eAAeA,UAAf","sourcesContent":["import React from \"react\";\r\nimport classes from \"./ResetCount.module.css\";\r\nimport {useSelector, useDispatch} from \"react-redux\";\r\nimport {resetTimeAction} from \"../../store/timeReducer\";\r\nimport {setStatusAction} from \"../../store/timerStatus\";\r\nimport {resetPause} from \"../../utilites/timerSettings\";\r\n\r\nconst ResetCount = () => {\r\n\tconst dispatch = useDispatch();\r\n\tconst status = useSelector((state) => state.status.littlePause);\r\n\tconst totalCount = useSelector((state) => state.totalCount.totalCount);\r\n\r\n\tconst resetRound = () => {\r\n\t\tdispatch(setStatusAction(false));\r\n\t\tif (!status.littlePause) dispatch(resetTimeAction());\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className={classes.skip_wrapper}>\r\n\t\t\t{!status ? (\r\n\t\t\t\t<span onClick={resetRound}>Обновить таймер</span>\r\n\t\t\t) : (\r\n\t\t\t\t<span onClick={() => dispatch(resetPause({totalCount}))}>\r\n\t\t\t\t\tОбновить паузу\r\n\t\t\t\t</span>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ResetCount;\r\n"]},"metadata":{},"sourceType":"module"}