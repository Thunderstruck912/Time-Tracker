{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bouku\\\\Desktop\\\\Time Tracker\\\\time-tracker\\\\src\\\\components\\\\NavContentSetting\\\\NavSettingTimer\\\\defaultSoundSetting.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setSoundStatusAction } from \"../../../store/timerStatus\";\nimport { useLocalStorage } from \"../../../hooks/useLocalStorage\";\nimport RadioInputSetting from \"../../../UI/RadioInputSetting/RadioInputSetting\";\nimport useSound from \"use-sound\";\nimport swipeSound from \"./sound/bell.mp3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DefaultSoundSetting = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const status = useSelector(state => state.status);\n\n  const swipeInput = () => dispatch(setSoundStatusAction(!status.sound));\n\n  useLocalStorage(\"SETTING:SOUND_STATUS\", status.sound, setSoundStatusAction);\n  const [playActive] = useSound(swipeSound, {\n    soundEnabled: status.sound,\n    volume: 0.4\n  });\n  useEffect(() => {\n    playActive();\n  }, [status.littlePause]);\n  return /*#__PURE__*/_jsxDEV(RadioInputSetting, {\n    tittle: props.tittle,\n    swipe: swipeInput,\n    status: status.sound,\n    value_on: \"Вкл\",\n    value_off: \"Выкл\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 3\n  }, this);\n};\n\n_s(DefaultSoundSetting, \"PdjVFCLRZLQZDE+uPMgffx5eSlo=\", false, function () {\n  return [useDispatch, useSelector, useLocalStorage, useSound];\n});\n\n_c = DefaultSoundSetting;\nexport default DefaultSoundSetting;\n\nvar _c;\n\n$RefreshReg$(_c, \"DefaultSoundSetting\");","map":{"version":3,"sources":["C:/Users/bouku/Desktop/Time Tracker/time-tracker/src/components/NavContentSetting/NavSettingTimer/defaultSoundSetting.jsx"],"names":["React","useEffect","useSelector","useDispatch","setSoundStatusAction","useLocalStorage","RadioInputSetting","useSound","swipeSound","DefaultSoundSetting","props","dispatch","status","state","swipeInput","sound","playActive","soundEnabled","volume","littlePause","tittle"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAAQC,oBAAR,QAAmC,4BAAnC;AACA,SAAQC,eAAR,QAA8B,gCAA9B;AACA,OAAOC,iBAAP,MAA8B,iDAA9B;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;;;AAEA,MAAMC,mBAAmB,GAAIC,KAAD,IAAW;AAAA;;AACtC,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;AACA,QAAMS,MAAM,GAAGV,WAAW,CAAEW,KAAD,IAAWA,KAAK,CAACD,MAAlB,CAA1B;;AACA,QAAME,UAAU,GAAG,MAAMH,QAAQ,CAACP,oBAAoB,CAAC,CAACQ,MAAM,CAACG,KAAT,CAArB,CAAjC;;AAEAV,EAAAA,eAAe,CAAC,sBAAD,EAAyBO,MAAM,CAACG,KAAhC,EAAuCX,oBAAvC,CAAf;AAEA,QAAM,CAACY,UAAD,IAAeT,QAAQ,CAACC,UAAD,EAAa;AACzCS,IAAAA,YAAY,EAAEL,MAAM,CAACG,KADoB;AAEzCG,IAAAA,MAAM,EAAE;AAFiC,GAAb,CAA7B;AAKAjB,EAAAA,SAAS,CAAC,MAAM;AACfe,IAAAA,UAAU;AACV,GAFQ,EAEN,CAACJ,MAAM,CAACO,WAAR,CAFM,CAAT;AAIA,sBACC,QAAC,iBAAD;AACC,IAAA,MAAM,EAAET,KAAK,CAACU,MADf;AAEC,IAAA,KAAK,EAAEN,UAFR;AAGC,IAAA,MAAM,EAAEF,MAAM,CAACG,KAHhB;AAIC,IAAA,QAAQ,EAAE,KAJX;AAKC,IAAA,SAAS,EAAE;AALZ;AAAA;AAAA;AAAA;AAAA,UADD;AASA,CAzBD;;GAAMN,mB;UACYN,W,EACFD,W,EAGfG,e,EAEqBE,Q;;;KAPhBE,mB;AA2BN,eAAeA,mBAAf","sourcesContent":["import React, {useEffect} from \"react\";\r\nimport {useSelector, useDispatch} from \"react-redux\";\r\nimport {setSoundStatusAction} from \"../../../store/timerStatus\";\r\nimport {useLocalStorage} from \"../../../hooks/useLocalStorage\";\r\nimport RadioInputSetting from \"../../../UI/RadioInputSetting/RadioInputSetting\";\r\nimport useSound from \"use-sound\";\r\nimport swipeSound from \"./sound/bell.mp3\";\r\n\r\nconst DefaultSoundSetting = (props) => {\r\n\tconst dispatch = useDispatch();\r\n\tconst status = useSelector((state) => state.status);\r\n\tconst swipeInput = () => dispatch(setSoundStatusAction(!status.sound));\r\n\r\n\tuseLocalStorage(\"SETTING:SOUND_STATUS\", status.sound, setSoundStatusAction);\r\n\r\n\tconst [playActive] = useSound(swipeSound, {\r\n\t\tsoundEnabled: status.sound,\r\n\t\tvolume: 0.4,\r\n\t});\r\n  \r\n\tuseEffect(() => {\r\n\t\tplayActive();\r\n\t}, [status.littlePause]);\r\n\r\n\treturn (\r\n\t\t<RadioInputSetting\r\n\t\t\ttittle={props.tittle}\r\n\t\t\tswipe={swipeInput}\r\n\t\t\tstatus={status.sound}\r\n\t\t\tvalue_on={\"Вкл\"}\r\n\t\t\tvalue_off={\"Выкл\"}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport default DefaultSoundSetting;\r\n"]},"metadata":{},"sourceType":"module"}