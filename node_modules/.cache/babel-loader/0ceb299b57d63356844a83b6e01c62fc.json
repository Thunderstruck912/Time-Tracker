{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nexport const useLocalStorage = (key, defaultValue, action) => {\n  _s();\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const storage = JSON.parse(localStorage.getItem(key));\n    console.log(typeof storage);\n\n    if (storage) {\n      dispatch(action(JSON.parse(localStorage.getItem(key))));\n    } else {\n      dispatch(action(defaultValue));\n    }\n  }, []);\n  useEffect(() => {\n    console.log(defaultValue);\n    localStorage.setItem(key, JSON.stringify(defaultValue));\n  }, [defaultValue, key]);\n};\n\n_s(useLocalStorage, \"AgIJcfH1H12KzRN1QiO1ExB/+eo=\", false, function () {\n  return [useDispatch];\n});","map":{"version":3,"sources":["C:/Users/bouku/Desktop/Time Tracker/time-tracker/src/hooks/useLocalStorage.js"],"names":["useEffect","useDispatch","useLocalStorage","key","defaultValue","action","dispatch","storage","JSON","parse","localStorage","getItem","console","log","setItem","stringify"],"mappings":";;AAAA,SAAQA,SAAR,QAAwB,OAAxB;AACA,SAAQC,WAAR,QAA0B,aAA1B;AAEA,OAAO,MAAMC,eAAe,GAAC,CAACC,GAAD,EAAMC,YAAN,EAAmBC,MAAnB,KAA6B;AAAA;;AACxD,QAAMC,QAAQ,GAAEL,WAAW,EAA3B;AACAD,EAAAA,SAAS,CAAC,MAAK;AACb,UAAMO,OAAO,GAAEC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqBR,GAArB,CAAX,CAAf;AACAS,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAON,OAAnB;;AAEA,QAAGA,OAAH,EAAW;AACTD,MAAAA,QAAQ,CAACD,MAAM,CAACG,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqBR,GAArB,CAAX,CAAD,CAAP,CAAR;AACD,KAFD,MAEM;AACJG,MAAAA,QAAQ,CAACD,MAAM,CAACD,YAAD,CAAP,CAAR;AACD;AACF,GATQ,EASP,EATO,CAAT;AAWAJ,EAAAA,SAAS,CAAC,MAAK;AAEbY,IAAAA,OAAO,CAACC,GAAR,CAAYT,YAAZ;AACAM,IAAAA,YAAY,CAACI,OAAb,CAAqBX,GAArB,EAAyBK,IAAI,CAACO,SAAL,CAAeX,YAAf,CAAzB;AACD,GAJQ,EAIP,CAACA,YAAD,EAAcD,GAAd,CAJO,CAAT;AAKD,CAlBM;;GAAMD,e;UACKD,W","sourcesContent":["import {useEffect} from 'react';\r\nimport {useDispatch} from 'react-redux';\r\n\r\nexport const useLocalStorage=(key, defaultValue,action) =>{\r\n  const dispatch= useDispatch()\r\n  useEffect(() =>{\r\n    const storage =JSON.parse(localStorage.getItem(key))\r\n    console.log(typeof storage\r\n      )\r\n    if(storage){\r\n      dispatch(action(JSON.parse(localStorage.getItem(key))))\r\n    } else{\r\n      dispatch(action(defaultValue))\r\n    }\r\n  },[])\r\n\r\n  useEffect(() =>{\r\n\r\n    console.log(defaultValue)\r\n    localStorage.setItem(key,JSON.stringify(defaultValue))\r\n  },[defaultValue,key])\r\n}\r\n\r\n              \r\n"]},"metadata":{},"sourceType":"module"}