{"ast":null,"code":"// import React,{useState,useEffect} from 'react';\n// import {useDispatch} from 'react-redux';\nimport { setTimeAction, resetTimeAction, resetLittlePauseTimeAction, resetLargePauseTimeAction } from '../store/timeReducer';\nimport { setStatusAction, setLittlePauseAction } from '../store/timerStatus';\nimport { setTotalCountAction } from '../store/totalCountReducer';\nexport const defaultTimerSetting = () => {\n  return dispatch => {\n    console.log(1);\n    dispatch(resetTimeAction());\n    dispatch(setLittlePauseAction({\n      pause: false\n    }));\n    dispatch(setStatusAction({\n      play: true\n    }));\n  };\n}; // export function timerPauseSetting(){\n//     const dispatch=useDispatch()\n//     if((totalCount+1)%3===0){\n//       dispatch(setLittlePauseAction({pause:!status.littlePause}))\n//       dispatch(resetLargePauseTimeAction())\n//       dispatch(setTotalCountAction(1))    \n//       return\n//     }else\n//       dispatch(setLittlePauseAction({pause:!status.littlePause}))\n//       dispatch(resetLittlePauseTimeAction())\n//       dispatch(setTotalCountAction(1))\n//       return\n//    }\n// export const defaultTimerSetting=()=>{\n//   const dispatch=useDispatch()\n//     dispatch(resetTimeAction())\n//     dispatch(setLittlePauseAction({pause:false}))\n//     dispatch(setStatusAction({play:true}))\n//    }","map":{"version":3,"sources":["C:/Users/bouku/Desktop/Time Tracker/time-tracker/src/utilites/timerSettings.js"],"names":["setTimeAction","resetTimeAction","resetLittlePauseTimeAction","resetLargePauseTimeAction","setStatusAction","setLittlePauseAction","setTotalCountAction","defaultTimerSetting","dispatch","console","log","pause","play"],"mappings":"AAAA;AACA;AACA,SAASA,aAAT,EAAwBC,eAAxB,EAAwCC,0BAAxC,EAAmEC,yBAAnE,QAAoG,sBAApG;AACA,SAAQC,eAAR,EAAwBC,oBAAxB,QAAmD,sBAAnD;AACA,SAAQC,mBAAR,QAAkC,4BAAlC;AAEA,OAAO,MAAMC,mBAAmB,GAAG,MAAI;AACrC,SAAQC,QAAD,IAAY;AAEjBC,IAAAA,OAAO,CAACC,GAAR,CAAY,CAAZ;AACAF,IAAAA,QAAQ,CAACP,eAAe,EAAhB,CAAR;AACAO,IAAAA,QAAQ,CAACH,oBAAoB,CAAC;AAACM,MAAAA,KAAK,EAAC;AAAP,KAAD,CAArB,CAAR;AACAH,IAAAA,QAAQ,CAACJ,eAAe,CAAC;AAACQ,MAAAA,IAAI,EAAC;AAAN,KAAD,CAAhB,CAAR;AACD,GAND;AAOD,CARM,C,CAWP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// import React,{useState,useEffect} from 'react';\r\n// import {useDispatch} from 'react-redux';\r\nimport { setTimeAction, resetTimeAction,resetLittlePauseTimeAction,resetLargePauseTimeAction } from '../store/timeReducer';\r\nimport {setStatusAction,setLittlePauseAction} from '../store/timerStatus'\r\nimport {setTotalCountAction} from '../store/totalCountReducer'\r\n\r\nexport const defaultTimerSetting = ()=>{\r\n  return (dispatch)=>{\r\n\r\n    console.log(1)\r\n    dispatch(resetTimeAction())\r\n    dispatch(setLittlePauseAction({pause:false}))\r\n    dispatch(setStatusAction({play:true}))\r\n  }\r\n}\r\n\r\n\r\n// export function timerPauseSetting(){\r\n//     const dispatch=useDispatch()\r\n//     if((totalCount+1)%3===0){\r\n//       dispatch(setLittlePauseAction({pause:!status.littlePause}))\r\n//       dispatch(resetLargePauseTimeAction())\r\n//       dispatch(setTotalCountAction(1))    \r\n//       return\r\n//     }else\r\n//       dispatch(setLittlePauseAction({pause:!status.littlePause}))\r\n//       dispatch(resetLittlePauseTimeAction())\r\n//       dispatch(setTotalCountAction(1))\r\n//       return\r\n//    }\r\n   \r\n// export const defaultTimerSetting=()=>{\r\n//   const dispatch=useDispatch()\r\n//     dispatch(resetTimeAction())\r\n//     dispatch(setLittlePauseAction({pause:false}))\r\n//     dispatch(setStatusAction({play:true}))\r\n//    }\r\n"]},"metadata":{},"sourceType":"module"}