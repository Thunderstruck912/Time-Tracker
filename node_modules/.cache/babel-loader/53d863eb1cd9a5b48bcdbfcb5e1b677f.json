{"ast":null,"code":"const defaultState = {\n  totalCount: 0,\n  defaultCount: 12,\n  roundCount: 3\n};\nconst ADD_TOTAL_COUNT = \"ADD_TOTAL_COUNT\";\nconst SET_TOTAL_COUNT = \"SET_TOTAL_COUNT\";\nconst SET_DEFAULT_COUNT = \"SET_DEFAULT_COUNT\";\nconst ADD_DEFAULT_COUNT = \"ADD_DEFAULT_COUNT\";\nconst REMOVE_DEFAULT_COUNT = \"REMOVE_DEFAULT_COUNT\";\nconst SET_ROUND_COUNT = \"SET_ROUND_COUNT\";\nconst ADD_ROUND_COUNT = \"ADD_ROUND_COUNT\";\nconst REMOVE_ROUND_COUNT = \"REMOVE_ROUND_COUNT\";\nconst ALL_COUNT_RESET = \"ALL_COUNT_RESET\";\nexport const totalCountReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_TOTAL_COUNT:\n      return { ...state,\n        totalCount: state.totalCount + action.payload\n      };\n\n    case SET_TOTAL_COUNT:\n      return { ...state,\n        totalCount: action.payload\n      };\n\n    case SET_DEFAULT_COUNT:\n      return { ...state,\n        defaultCount: action.payload\n      };\n\n    case ADD_DEFAULT_COUNT:\n      return { ...state,\n        defaultCount: state.defaultCount + action.payload\n      };\n\n    case REMOVE_DEFAULT_COUNT:\n      return { ...state,\n        defaultCount: state.defaultCount - action.payload\n      };\n\n    case SET_ROUND_COUNT:\n      return { ...state,\n        roundCount: action.payload\n      };\n\n    case ADD_ROUND_COUNT:\n      return { ...state,\n        roundCount: state.roundCount + action.payload\n      };\n\n    case REMOVE_ROUND_COUNT:\n      return { ...state,\n        roundCount: state.roundCount - action.payload\n      };\n\n    case ALL_COUNT_RESET:\n      return { ...state,\n        defaultCount: defaultState.defaultCount,\n        roundCount: defaultState.roundCount\n      };\n\n    default:\n      return state;\n  }\n};\nexport const addTotalCountAction = payload => ({\n  type: ADD_TOTAL_COUNT,\n  payload\n});\nexport const setTotalCountAction = payload => ({\n  type: SET_TOTAL_COUNT,\n  payload\n});\nexport const setDefaultCountAction = payload => ({\n  type: SET_DEFAULT_COUNT,\n  payload\n});\nexport const addDefaultCountAction = payload => ({\n  type: ADD_DEFAULT_COUNT,\n  payload\n});\nexport const removeDefaultCountAction = payload => ({\n  type: REMOVE_DEFAULT_COUNT,\n  payload\n});\nexport const removeRoundAction = payload => ({\n  type: REMOVE_ROUND_COUNT,\n  payload\n});\nexport const addRoundAction = payload => ({\n  type: ADD_ROUND_COUNT,\n  payload\n});\nexport const setRoundAction = payload => ({\n  type: SET_ROUND_COUNT,\n  payload\n});\nexport const allCountResetAction = payload => ({\n  type: ALL_COUNT_RESET,\n  payload\n});","map":{"version":3,"sources":["C:/Users/bouku/Desktop/Time Tracker/time-tracker/src/store/totalCountReducer.js"],"names":["defaultState","totalCount","defaultCount","roundCount","ADD_TOTAL_COUNT","SET_TOTAL_COUNT","SET_DEFAULT_COUNT","ADD_DEFAULT_COUNT","REMOVE_DEFAULT_COUNT","SET_ROUND_COUNT","ADD_ROUND_COUNT","REMOVE_ROUND_COUNT","ALL_COUNT_RESET","totalCountReducer","state","action","type","payload","addTotalCountAction","setTotalCountAction","setDefaultCountAction","addDefaultCountAction","removeDefaultCountAction","removeRoundAction","addRoundAction","setRoundAction","allCountResetAction"],"mappings":"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","sourcesContent":["const defaultState = {\r\n\ttotalCount: 0,\r\n\tdefaultCount: 12,\r\n\troundCount: 3,\r\n};\r\n\r\nconst ADD_TOTAL_COUNT = \"ADD_TOTAL_COUNT\";\r\nconst SET_TOTAL_COUNT = \"SET_TOTAL_COUNT\";\r\n\r\nconst SET_DEFAULT_COUNT = \"SET_DEFAULT_COUNT\";\r\nconst ADD_DEFAULT_COUNT = \"ADD_DEFAULT_COUNT\";\r\nconst REMOVE_DEFAULT_COUNT = \"REMOVE_DEFAULT_COUNT\";\r\n\r\nconst SET_ROUND_COUNT = \"SET_ROUND_COUNT\";\r\nconst ADD_ROUND_COUNT = \"ADD_ROUND_COUNT\";\r\nconst REMOVE_ROUND_COUNT = \"REMOVE_ROUND_COUNT\";\r\n\r\nconst ALL_COUNT_RESET = \"ALL_COUNT_RESET\";\r\n\r\nexport const totalCountReducer = (state = defaultState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase ADD_TOTAL_COUNT:\r\n\t\t\treturn {...state, totalCount: state.totalCount + action.payload};\r\n\t\tcase SET_TOTAL_COUNT:\r\n\t\t\treturn {...state, totalCount: action.payload};\r\n\r\n\t\tcase SET_DEFAULT_COUNT:\r\n\t\t\treturn {...state, defaultCount: action.payload};\r\n\t\tcase ADD_DEFAULT_COUNT:\r\n\t\t\treturn {...state, defaultCount: state.defaultCount + action.payload};\r\n\t\tcase REMOVE_DEFAULT_COUNT:\r\n\t\t\treturn {...state, defaultCount: state.defaultCount - action.payload};\r\n\r\n\t\tcase SET_ROUND_COUNT:\r\n\t\t\treturn {...state, roundCount: action.payload};\r\n\t\tcase ADD_ROUND_COUNT:\r\n\t\t\treturn {...state, roundCount: state.roundCount + action.payload};\r\n\t\tcase REMOVE_ROUND_COUNT:\r\n\t\t\treturn {...state, roundCount: state.roundCount - action.payload};\r\n\r\n\t\tcase ALL_COUNT_RESET:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdefaultCount: defaultState.defaultCount,\r\n\t\t\t\troundCount: defaultState.roundCount,\r\n\t\t\t};\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport const addTotalCountAction = (payload) => ({\r\n\ttype: ADD_TOTAL_COUNT,\r\n\tpayload,\r\n});\r\nexport const setTotalCountAction = (payload) => ({\r\n\ttype: SET_TOTAL_COUNT,\r\n\tpayload,\r\n});\r\n\r\nexport const setDefaultCountAction = (payload) => ({\r\n\ttype: SET_DEFAULT_COUNT,\r\n\tpayload,\r\n});\r\nexport const addDefaultCountAction = (payload) => ({\r\n\ttype: ADD_DEFAULT_COUNT,\r\n\tpayload,\r\n});\r\nexport const removeDefaultCountAction = (payload) => ({\r\n\ttype: REMOVE_DEFAULT_COUNT,\r\n\tpayload,\r\n});\r\n\r\nexport const removeRoundAction = (payload) => ({\r\n\ttype: REMOVE_ROUND_COUNT,\r\n\tpayload,\r\n});\r\nexport const addRoundAction = (payload) => ({type: ADD_ROUND_COUNT, payload});\r\nexport const setRoundAction = (payload) => ({type: SET_ROUND_COUNT, payload});\r\n\r\nexport const allCountResetAction = (payload) => ({\r\n\ttype: ALL_COUNT_RESET,\r\n\tpayload,\r\n});\r\n"]},"metadata":{},"sourceType":"module"}