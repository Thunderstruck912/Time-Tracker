{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bouku\\\\Desktop\\\\Time Tracker\\\\time-tracker\\\\src\\\\components\\\\Timer\\\\Timer.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setTimeAction } from '../../store/timeReducer';\nimport { setStatusAction, setLittlePauseAction } from '../../store/timerStatus';\nimport { setTotalCountAction } from '../../store/totalCountReducer';\nimport InputTimer from '../../UI/InputTimer/InputTimer';\nimport classes from '../Timer/Timer.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Timer = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const time = useSelector(state => state.time.timer);\n  const status = useSelector(state => state.status);\n  const pause = useSelector(state => state.status.littlePause);\n  const totalCount = useSelector(state => state.totalCount.totalCount);\n  let updateM = time.minutes,\n      updateS = time.seconds;\n  useEffect(() => {\n    document.title = `${time.minutes >= 10 ? time.minutes : '0' + time.minutes}:${time.seconds >= 10 ? time.seconds : '0' + time.seconds}`;\n  }, [time]);\n\n  const timerPauseSetting = () => {\n    if ((totalCount + 1) % 3 === 0) {\n      dispatch(setLittlePauseAction({\n        pause: !pause\n      }));\n      dispatch(setTimeAction({\n        value1: 0,\n        value2: 25\n      }));\n      dispatch(setTotalCountAction(1));\n      return;\n    } else dispatch(setLittlePauseAction({\n      pause: !pause\n    }));\n\n    dispatch(setTimeAction({\n      value1: 0,\n      value2: 15\n    }));\n    dispatch(setTotalCountAction(1));\n  };\n\n  const defaultTimerSetting = () => {\n    dispatch(setTimeAction({\n      value1: 0,\n      value2: 10\n    }));\n    dispatch(setLittlePauseAction({\n      pause: false\n    }));\n    dispatch(setStatusAction({\n      play: true\n    }));\n  };\n\n  useEffect(() => {\n    if (status.play) {\n      const intervalId = setInterval(() => {\n        if (updateM === 0 && updateS === 1) {\n          dispatch(setStatusAction({\n            play: !status.play\n          }));\n\n          if (!pause) {\n            timerPauseSetting();\n            return clearInterval(intervalId);\n          } else defaultTimerSetting();\n\n          return clearInterval(intervalId);\n        }\n\n        if (updateS === 0) {\n          updateS = 60;\n          updateM--;\n        }\n\n        updateS--;\n        dispatch(setTimeAction({\n          value1: updateM,\n          value2: updateS\n        }));\n      }, 10);\n      return () => clearInterval(intervalId);\n    }\n\n    return undefined;\n  }, [status.play, pause]);\n  useEffect(() => {\n    if (pause) dispatch(setStatusAction({\n      play: true\n    }));\n  }, [pause]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.timer,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.span_wrapper,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: classes.span,\n        children: time.minutes >= 10 ? time.minutes : '0' + time.minutes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: classes.span,\n        children: \":\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: classes.span,\n        children: time.seconds >= 10 ? time.seconds : '0' + time.seconds\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.img,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.wrapper_img,\n        style: {\n          marginLeft: -(time.minutes * 60 + time.seconds)\n        },\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: require('./icon/scale.png'),\n          alt: 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(InputTimer, {\n      status: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Timer, \"DFV+0g82rm2U3dh6A1XRtXftFmw=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = Timer;\nexport default Timer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"sources":["C:/Users/bouku/Desktop/Time Tracker/time-tracker/src/components/Timer/Timer.jsx"],"names":["React","useState","useEffect","useSelector","useDispatch","setTimeAction","setStatusAction","setLittlePauseAction","setTotalCountAction","InputTimer","classes","Timer","dispatch","time","state","timer","status","pause","littlePause","totalCount","updateM","minutes","updateS","seconds","document","title","timerPauseSetting","value1","value2","defaultTimerSetting","play","intervalId","setInterval","clearInterval","undefined","span_wrapper","span","img","wrapper_img","marginLeft","require"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,SAAQC,WAAR,EAAoBC,WAApB,QAAsC,aAAtC;AACA,SAASC,aAAT,QAA8B,yBAA9B;AACA,SAAQC,eAAR,EAAwBC,oBAAxB,QAAmD,yBAAnD;AACA,SAAQC,mBAAR,QAAkC,+BAAlC;AACA,OAAOC,UAAP,MAAuB,gCAAvB;AAEA,OAAOC,OAAP,MAAoB,2BAApB;;;AAGA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAClB,QAAMC,QAAQ,GAACR,WAAW,EAA1B;AACA,QAAMS,IAAI,GAACV,WAAW,CAAEW,KAAD,IAASA,KAAK,CAACD,IAAN,CAAWE,KAArB,CAAtB;AACA,QAAMC,MAAM,GAACb,WAAW,CAAEW,KAAD,IAASA,KAAK,CAACE,MAAhB,CAAxB;AACA,QAAMC,KAAK,GAACd,WAAW,CAAEW,KAAD,IAASA,KAAK,CAACE,MAAN,CAAaE,WAAvB,CAAvB;AACA,QAAMC,UAAU,GAAChB,WAAW,CAAEW,KAAD,IAASA,KAAK,CAACK,UAAN,CAAiBA,UAA3B,CAA5B;AAEA,MAAIC,OAAO,GAAEP,IAAI,CAACQ,OAAlB;AAAA,MAA2BC,OAAO,GAACT,IAAI,CAACU,OAAxC;AAEArB,EAAAA,SAAS,CAAC,MAAM;AACdsB,IAAAA,QAAQ,CAACC,KAAT,GAAgB,GAAEZ,IAAI,CAACQ,OAAL,IAAc,EAAd,GAAiBR,IAAI,CAACQ,OAAtB,GAA8B,MAAIR,IAAI,CAACQ,OAAQ,IAAGR,IAAI,CAACU,OAAL,IAAc,EAAd,GAAiBV,IAAI,CAACU,OAAtB,GAA8B,MAAIV,IAAI,CAACU,OAAQ,EAAnH;AACF,GAFS,EAEP,CAACV,IAAD,CAFO,CAAT;;AAID,QAAMa,iBAAiB,GAAC,MAAI;AAC3B,QAAG,CAACP,UAAU,GAAC,CAAZ,IAAe,CAAf,KAAmB,CAAtB,EAAwB;AACtBP,MAAAA,QAAQ,CAACL,oBAAoB,CAAC;AAACU,QAAAA,KAAK,EAAC,CAACA;AAAR,OAAD,CAArB,CAAR;AACAL,MAAAA,QAAQ,CAACP,aAAa,CAAC;AAACsB,QAAAA,MAAM,EAAC,CAAR;AAAUC,QAAAA,MAAM,EAAC;AAAjB,OAAD,CAAd,CAAR;AACAhB,MAAAA,QAAQ,CAACJ,mBAAmB,CAAC,CAAD,CAApB,CAAR;AACA;AACD,KALD,MAMEI,QAAQ,CAACL,oBAAoB,CAAC;AAACU,MAAAA,KAAK,EAAC,CAACA;AAAR,KAAD,CAArB,CAAR;;AACAL,IAAAA,QAAQ,CAACP,aAAa,CAAC;AAACsB,MAAAA,MAAM,EAAC,CAAR;AAAUC,MAAAA,MAAM,EAAC;AAAjB,KAAD,CAAd,CAAR;AACAhB,IAAAA,QAAQ,CAACJ,mBAAmB,CAAC,CAAD,CAApB,CAAR;AACF,GAVD;;AAYA,QAAMqB,mBAAmB,GAAC,MAAI;AAC7BjB,IAAAA,QAAQ,CAACP,aAAa,CAAC;AAACsB,MAAAA,MAAM,EAAC,CAAR;AAAUC,MAAAA,MAAM,EAAC;AAAjB,KAAD,CAAd,CAAR;AACAhB,IAAAA,QAAQ,CAACL,oBAAoB,CAAC;AAACU,MAAAA,KAAK,EAAC;AAAP,KAAD,CAArB,CAAR;AACAL,IAAAA,QAAQ,CAACN,eAAe,CAAC;AAACwB,MAAAA,IAAI,EAAC;AAAN,KAAD,CAAhB,CAAR;AACA,GAJD;;AAMA5B,EAAAA,SAAS,CAAC,MAAK;AACd,QAAGc,MAAM,CAACc,IAAV,EAAe;AACb,YAAMC,UAAU,GAAGC,WAAW,CAAC,MAAI;AACjC,YAAGZ,OAAO,KAAG,CAAV,IAAaE,OAAO,KAAG,CAA1B,EAA6B;AAC3BV,UAAAA,QAAQ,CAACN,eAAe,CAAC;AAACwB,YAAAA,IAAI,EAAC,CAACd,MAAM,CAACc;AAAd,WAAD,CAAhB,CAAR;;AACA,cAAG,CAACb,KAAJ,EAAU;AACRS,YAAAA,iBAAiB;AACjB,mBAAOO,aAAa,CAACF,UAAD,CAApB;AACC,WAHH,MAIEF,mBAAmB;;AACnB,iBAAOI,aAAa,CAACF,UAAD,CAApB;AACD;;AACL,YAAGT,OAAO,KAAG,CAAb,EAAe;AACbA,UAAAA,OAAO,GAAC,EAAR;AACAF,UAAAA,OAAO;AAAG;;AACZE,QAAAA,OAAO;AACPV,QAAAA,QAAQ,CAACP,aAAa,CAAC;AAACsB,UAAAA,MAAM,EAACP,OAAR;AAAgBQ,UAAAA,MAAM,EAACN;AAAvB,SAAD,CAAd,CAAR;AACC,OAf6B,EAe5B,EAf4B,CAA9B;AAgBA,aAAO,MAAIW,aAAa,CAACF,UAAD,CAAxB;AACA;;AAAC,WAAOG,SAAP;AACH,GApBQ,EAoBP,CAAClB,MAAM,CAACc,IAAR,EAAab,KAAb,CApBO,CAAT;AAsBCf,EAAAA,SAAS,CAAC,MAAI;AACZ,QAAGe,KAAH,EAAUL,QAAQ,CAACN,eAAe,CAAC;AAACwB,MAAAA,IAAI,EAAC;AAAN,KAAD,CAAhB,CAAR;AACX,GAFQ,EAEP,CAACb,KAAD,CAFO,CAAT;AAKA,sBACE;AAAK,IAAA,SAAS,EAAEP,OAAO,CAACK,KAAxB;AAAA,4BACF;AAAK,MAAA,SAAS,EAAEL,OAAO,CAACyB,YAAxB;AAAA,8BACE;AAAM,QAAA,SAAS,EAAEzB,OAAO,CAAC0B,IAAzB;AAAA,kBAAgCvB,IAAI,CAACQ,OAAL,IAAc,EAAd,GAAiBR,IAAI,CAACQ,OAAtB,GAA8B,MAAIR,IAAI,CAACQ;AAAvE;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAM,QAAA,SAAS,EAAEX,OAAO,CAAC0B,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAM,QAAA,SAAS,EAAE1B,OAAO,CAAC0B,IAAzB;AAAA,kBAAgCvB,IAAI,CAACU,OAAL,IAAc,EAAd,GAAiBV,IAAI,CAACU,OAAtB,GAA8B,MAAIV,IAAI,CAACU;AAAvE;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADE,eAOF;AAAK,MAAA,SAAS,EAAEb,OAAO,CAAC2B,GAAxB;AAAA,6BACE;AAAK,QAAA,SAAS,EAAE3B,OAAO,CAAC4B,WAAxB;AAAqC,QAAA,KAAK,EAAE;AAACC,UAAAA,UAAU,EAAC,EAAE1B,IAAI,CAACQ,OAAL,GAAa,EAAb,GAAgBR,IAAI,CAACU,OAAvB;AAAZ,SAA5C;AAAA,+BACA;AAAK,UAAA,GAAG,EAAEiB,OAAO,CAAC,kBAAD,CAAjB;AAAuC,UAAA,GAAG,EAAE;AAA5C;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAPE,eAYF,QAAC,UAAD;AAAY,MAAA,MAAM,EAAExB;AAApB;AAAA;AAAA;AAAA;AAAA,YAZE;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeE,CAzEJ;;GAAML,K;UACWP,W,EACJD,W,EACEA,W,EACDA,W,EACKA,W;;;KALbQ,K;AA2EN,eAAeA,KAAf","sourcesContent":["import React,{useState,useEffect} from 'react';\r\nimport {useSelector,useDispatch} from 'react-redux';\r\nimport { setTimeAction } from '../../store/timeReducer';\r\nimport {setStatusAction,setLittlePauseAction} from '../../store/timerStatus'\r\nimport {setTotalCountAction} from '../../store/totalCountReducer'\r\nimport InputTimer from '../../UI/InputTimer/InputTimer';\r\n\r\nimport classes from '../Timer/Timer.module.css'\r\n\r\n\r\nconst Timer = () => {\r\n  const dispatch=useDispatch()\r\n  const time=useSelector((state)=>state.time.timer)\r\n  const status=useSelector((state)=>state.status)\r\n  const pause=useSelector((state)=>state.status.littlePause)\r\n  const totalCount=useSelector((state)=>state.totalCount.totalCount)\r\n\r\n  let updateM= time.minutes, updateS=time.seconds  \r\n\r\n  useEffect(() => {\r\n    document.title=`${time.minutes>=10?time.minutes:'0'+time.minutes}:${time.seconds>=10?time.seconds:'0'+time.seconds}`\r\n }, [time]);\r\n\r\n const timerPauseSetting=()=>{\r\n  if((totalCount+1)%3===0){\r\n    dispatch(setLittlePauseAction({pause:!pause}))\r\n    dispatch(setTimeAction({value1:0,value2:25}))\r\n    dispatch(setTotalCountAction(1))  \r\n    return\r\n  }else\r\n    dispatch(setLittlePauseAction({pause:!pause}))\r\n    dispatch(setTimeAction({value1:0,value2:15}))\r\n    dispatch(setTotalCountAction(1))\r\n }\r\n\r\n const defaultTimerSetting=()=>{\r\n  dispatch(setTimeAction({value1:0,value2:10}))\r\n  dispatch(setLittlePauseAction({pause:false}))\r\n  dispatch(setStatusAction({play:true}))\r\n }\r\n\r\n useEffect(() =>{\r\n  if(status.play){\r\n    const intervalId = setInterval(()=>{\r\n      if(updateM===0&&updateS===1) {\r\n        dispatch(setStatusAction({play:!status.play}))\r\n        if(!pause){\r\n          timerPauseSetting()\r\n          return clearInterval(intervalId)\r\n          }else\r\n          defaultTimerSetting()\r\n          return clearInterval(intervalId)\r\n        }\r\n    if(updateS===0){\r\n      updateS=60\r\n      updateM--}\r\n    updateS--\r\n    dispatch(setTimeAction({value1:updateM,value2:updateS}))\r\n    },10);\r\n    return ()=>clearInterval(intervalId);\r\n   } return undefined;\r\n },[status.play,pause])\r\n\r\n  useEffect(()=>{\r\n    if(pause) dispatch(setStatusAction({play:true}))\r\n  },[pause])\r\n\r\n\r\n  return (\r\n    <div className={classes.timer} >\r\n  <div className={classes.span_wrapper}>\r\n    <span className={classes.span}>{time.minutes>=10?time.minutes:'0'+time.minutes}</span>\r\n    <span className={classes.span}>:</span>\r\n    <span className={classes.span}>{time.seconds>=10?time.seconds:'0'+time.seconds}</span>\r\n  </div>\r\n  \r\n  <div className={classes.img} >\r\n    <div className={classes.wrapper_img} style={{marginLeft:-(time.minutes*60+time.seconds)}}>\r\n    <img src={require('./icon/scale.png')} alt={1}></img>\r\n    </div>\r\n  </div>\r\n  <InputTimer status={status}/>\r\n  </div>\r\n  )};\r\n\r\nexport default Timer;\r\n"]},"metadata":{},"sourceType":"module"}