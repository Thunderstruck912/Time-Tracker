{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bouku\\\\Desktop\\\\Time Tracker\\\\time-tracker\\\\src\\\\components\\\\Timer\\\\Timer.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setTimeAction, resetTimeAction } from \"../../store/timeReducer\";\nimport { setStatusAction, setLittlePauseAction } from \"../../store/timerStatus\";\nimport { defaultTimerSetting, timerPauseSetting } from \"../../utilites/timerSettings\";\nimport { useLocalStorage } from \"../../hooks/useLocalStorage\";\nimport InputTimer from \"../../UI/InputTimer/InputTimer\";\nimport TimerSpan from \"./TimerSpan/TimerSpan\";\nimport classes from \"../Timer/Timer.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst firstTimeStatus = \"DATA:FIRST_TIME_STATUS\";\nconst timerTime = \"DATA:TIMER\";\n\nconst Timer = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const timer = useSelector(state => state.time.timer);\n  const status = useSelector(state => state.status);\n  const totalCount = useSelector(state => state.totalCount.totalCount);\n  const [firstRun, setFirstRun] = useState(localStorage.getItem(firstTimeStatus) || true);\n  useLocalStorage(\"SETTING:LITTLE_PAUSE_STATUS\", status.littlePause, setLittlePauseAction);\n  let updateM = timer.minutes,\n      updateS = timer.seconds;\n  useEffect(() => {\n    localStorage.setItem(firstTimeStatus, firstRun);\n  }, [firstRun]);\n  useEffect(() => {\n    if (!firstRun) {\n      if (timer !== undefined && timer.minutes !== 0) {\n        localStorage.setItem(timerTime, JSON.stringify(timer));\n      }\n    }\n  }, [timer]);\n  useEffect(() => {\n    if (localStorage.getItem(timerTime)) {\n      let t = JSON.parse(localStorage.getItem(timerTime));\n      dispatch(setTimeAction({\n        minutes: t.minutes,\n        seconds: t.seconds\n      }));\n    } else {\n      dispatch(resetTimeAction());\n    }\n  }, []);\n  useEffect(() => {\n    if (status.littlePause && status.reloadStatus) dispatch(setStatusAction({\n      play: true\n    }));\n  }, [status.littlePause]);\n  useEffect(() => {\n    if (status.play) {\n      if (firstRun) setFirstRun(false);\n      const intervalId = setInterval(() => {\n        if (updateM === 0 && updateS === 1) {\n          dispatch(setStatusAction({\n            play: !status.play\n          }));\n\n          if (!status.littlePause) {\n            dispatch(timerPauseSetting({\n              status,\n              totalCount\n            }));\n            return clearInterval(intervalId);\n          } else dispatch(defaultTimerSetting());\n\n          return clearInterval(intervalId);\n        }\n\n        if (updateS === 0) {\n          updateS = 60;\n          updateM--;\n        }\n\n        updateS--;\n        dispatch(setTimeAction({\n          minutes: updateM,\n          seconds: updateS\n        }));\n      }, 1000);\n      return () => clearInterval(intervalId);\n    }\n  }, [status.play, status.littlePause]);\n\n  const setRun = () => setFirstRun(false);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.timer,\n    children: [/*#__PURE__*/_jsxDEV(TimerSpan, {\n      timer: timer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.img,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.wrapper_img,\n        style: {\n          marginLeft: -(timer.minutes * 60 + timer.seconds)\n        },\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: require(\"./icon/scale.png\"),\n          alt: 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(InputTimer, {\n      status: status,\n      setFirstRun: setRun\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Timer, \"+OpA5UD8TL/hzth2HSQ5X8e9Dw8=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useLocalStorage];\n});\n\n_c = Timer;\nexport default Timer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"sources":["C:/Users/bouku/Desktop/Time Tracker/time-tracker/src/components/Timer/Timer.jsx"],"names":["React","useState","useEffect","useSelector","useDispatch","setTimeAction","resetTimeAction","setStatusAction","setLittlePauseAction","defaultTimerSetting","timerPauseSetting","useLocalStorage","InputTimer","TimerSpan","classes","firstTimeStatus","timerTime","Timer","dispatch","timer","state","time","status","totalCount","firstRun","setFirstRun","localStorage","getItem","littlePause","updateM","minutes","updateS","seconds","setItem","undefined","JSON","stringify","t","parse","reloadStatus","play","intervalId","setInterval","clearInterval","setRun","img","wrapper_img","marginLeft","require"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\r\nimport {useSelector, useDispatch} from \"react-redux\";\r\nimport {setTimeAction, resetTimeAction} from \"../../store/timeReducer\";\r\nimport {setStatusAction, setLittlePauseAction} from \"../../store/timerStatus\";\r\nimport {\r\n\tdefaultTimerSetting,\r\n\ttimerPauseSetting,\r\n} from \"../../utilites/timerSettings\";\r\nimport {useLocalStorage} from \"../../hooks/useLocalStorage\";\r\nimport InputTimer from \"../../UI/InputTimer/InputTimer\";\r\nimport TimerSpan from \"./TimerSpan/TimerSpan\"\r\nimport classes from \"../Timer/Timer.module.css\";\r\n\r\nconst firstTimeStatus = \"DATA:FIRST_TIME_STATUS\";\r\nconst timerTime = \"DATA:TIMER\";\r\n\r\nconst Timer = () => {\r\n\tconst dispatch = useDispatch();\r\n\tconst timer = useSelector((state) => state.time.timer);\r\n\tconst status = useSelector((state) => state.status);\r\n\tconst totalCount = useSelector((state) => state.totalCount.totalCount);\r\n\tconst [firstRun, setFirstRun] = useState(\r\n\t\tlocalStorage.getItem(firstTimeStatus) || true,\r\n\t);\r\n\r\n\tuseLocalStorage(\r\n\t\t\"SETTING:LITTLE_PAUSE_STATUS\",\r\n\t\tstatus.littlePause,\r\n\t\tsetLittlePauseAction,\r\n\t);\r\n\r\n\tlet updateM = timer.minutes,\r\n\t\tupdateS = timer.seconds;\r\n\r\n\tuseEffect(() => {\r\n\t\tlocalStorage.setItem(firstTimeStatus, firstRun);\r\n\t}, [firstRun]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!firstRun) {\r\n\t\t\tif (timer !== undefined && timer.minutes !== 0) {\r\n\t\t\t\tlocalStorage.setItem(timerTime, JSON.stringify(timer));\r\n\t\t\t}\r\n\t\t}\r\n\t}, [timer]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (localStorage.getItem(timerTime)) {\r\n\t\t\tlet t = JSON.parse(localStorage.getItem(timerTime));\r\n\t\t\tdispatch(setTimeAction({minutes: t.minutes, seconds: t.seconds}));\r\n\t\t} else {\r\n\t\t\tdispatch(resetTimeAction());\r\n\t\t}\r\n\t}, []);\r\n\r\n\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tif (status.littlePause && status.reloadStatus)\r\n\t\t\tdispatch(setStatusAction({play: true}));\r\n\t}, [status.littlePause]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (status.play) {\r\n\t\t\tif (firstRun) setFirstRun(false);\r\n\t\t\tconst intervalId = setInterval(() => {\r\n\t\t\t\tif (updateM === 0 && updateS === 1) {\r\n\t\t\t\t\tdispatch(setStatusAction({play: !status.play}));\r\n\t\t\t\t\tif (!status.littlePause) {\r\n\t\t\t\t\t\tdispatch(timerPauseSetting({status, totalCount}));\r\n\t\t\t\t\t\treturn clearInterval(intervalId);\r\n\t\t\t\t\t} else dispatch(defaultTimerSetting());\r\n\t\t\t\t\treturn clearInterval(intervalId);\r\n\t\t\t\t}\r\n\t\t\t\tif (updateS === 0) {\r\n\t\t\t\t\tupdateS = 60;\r\n\t\t\t\t\tupdateM--;\r\n\t\t\t\t}\r\n\t\t\t\tupdateS--;\r\n\t\t\t\tdispatch(setTimeAction({minutes: updateM, seconds: updateS}));\r\n\t\t\t}, 1000);\r\n\t\t\treturn () => clearInterval(intervalId);\r\n\t\t}\r\n\t}, [status.play, status.littlePause]);\r\n\r\n\tconst setRun = () => setFirstRun(false);\r\n\r\n\treturn (\r\n\t\t<div className={classes.timer}>\r\n      <TimerSpan timer={timer}/>\r\n\t\t\t{/* <div className={classes.span_wrapper}>\r\n\t\t\t\t<span className={classes.span}>\r\n\t\t\t\t\t{timer.minutes >= 10 ? timer.minutes : \"0\" + timer.minutes}\r\n\t\t\t\t</span>\r\n\t\t\t\t<span className={classes.span}>:</span>\r\n\t\t\t\t<span className={classes.span}>\r\n\t\t\t\t\t{timer.seconds >= 10 ? timer.seconds : \"0\" + timer.seconds}\r\n\t\t\t\t</span>\r\n\t\t\t</div> */}\r\n\t\t\t<div className={classes.img}>\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName={classes.wrapper_img}\r\n\t\t\t\t\tstyle={{marginLeft: -(timer.minutes * 60 + timer.seconds)}}>\r\n\t\t\t\t\t<img src={require(\"./icon/scale.png\")} alt={1}></img>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<InputTimer status={status} setFirstRun={setRun} />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Timer;\r\n"]},"metadata":{},"sourceType":"module"}