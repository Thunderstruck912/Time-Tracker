{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bouku\\\\Desktop\\\\Time Tracker\\\\time-tracker\\\\src\\\\components\\\\main.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Main = () => {\n  _s();\n\n  const [time, setTime] = useState({\n    minutes: 1,\n    seconds: 0\n  });\n  const [active, setActive] = useState(true);\n  const [interv, setInterv] = useState();\n  const [totalCount, setTotalCount] = useState(0);\n  let updateMin = time.minutes,\n      updateSec = time.seconds;\n\n  const timer = () => {\n    setActive(!active);\n\n    if (active) {\n      run();\n      setInterv(setInterval(run, 100));\n    } else {\n      clearInterval(interv);\n    }\n  };\n\n  const run = () => {\n    if (updateMin === 0 && updateSec === 1) {\n      setTotalCount(totalCount + 1);\n      setTime({\n        minutes: 0,\n        seconds: 0\n      });\n      return setTime({\n        minutes: 1,\n        seconds: 0\n      });\n    }\n\n    if (updateSec === 0) {\n      updateSec = 60;\n      updateMin--;\n    }\n\n    updateSec--;\n    return setTime({\n      minutes: updateMin,\n      seconds: updateSec\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: time.minutes >= 10 ? time.minutes : '0' + time.minutes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }, this), \":\", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: time.seconds >= 10 ? time.seconds : '0' + time.seconds\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        onClick: timer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Main, \"RA3hgV2oMogxJFQkLqYA3gimtUs=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["C:/Users/bouku/Desktop/Time Tracker/time-tracker/src/components/main.jsx"],"names":["React","useState","Main","time","setTime","minutes","seconds","active","setActive","interv","setInterv","totalCount","setTotalCount","updateMin","updateSec","timer","run","setInterval","clearInterval"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AAEjB,QAAK,CAACC,IAAD,EAAMC,OAAN,IAAeH,QAAQ,CAAC;AAACI,IAAAA,OAAO,EAAC,CAAT;AAAYC,IAAAA,OAAO,EAAC;AAApB,GAAD,CAA5B;AACA,QAAK,CAACC,MAAD,EAAQC,SAAR,IAAmBP,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACQ,MAAD,EAAQC,SAAR,IAAmBT,QAAQ,EAAjC;AAEA,QAAM,CAACU,UAAD,EAAYC,aAAZ,IAA2BX,QAAQ,CAAC,CAAD,CAAzC;AAEA,MAAIY,SAAS,GAAEV,IAAI,CAACE,OAApB;AAAA,MAA6BS,SAAS,GAACX,IAAI,CAACG,OAA5C;;AAGA,QAAMS,KAAK,GAAC,MAAI;AACdP,IAAAA,SAAS,CAAC,CAACD,MAAF,CAAT;;AACA,QAAGA,MAAH,EAAU;AACRS,MAAAA,GAAG;AACHN,MAAAA,SAAS,CAACO,WAAW,CAACD,GAAD,EAAK,GAAL,CAAZ,CAAT;AACD,KAHD,MAGO;AACLE,MAAAA,aAAa,CAACT,MAAD,CAAb;AACD;AACF,GARD;;AAUA,QAAMO,GAAG,GAAG,MAAI;AACd,QAAGH,SAAS,KAAG,CAAZ,IAAeC,SAAS,KAAG,CAA9B,EAAiC;AAC/BF,MAAAA,aAAa,CAACD,UAAU,GAAC,CAAZ,CAAb;AACAP,MAAAA,OAAO,CAAC;AAACC,QAAAA,OAAO,EAAC,CAAT;AAAWC,QAAAA,OAAO,EAAC;AAAnB,OAAD,CAAP;AACA,aAAOF,OAAO,CAAC;AAACC,QAAAA,OAAO,EAAC,CAAT;AAAYC,QAAAA,OAAO,EAAC;AAApB,OAAD,CAAd;AAED;;AACD,QAAGQ,SAAS,KAAG,CAAf,EAAiB;AACfA,MAAAA,SAAS,GAAC,EAAV;AACAD,MAAAA,SAAS;AACV;;AACDC,IAAAA,SAAS;AACT,WAAOV,OAAO,CAAC;AAACC,MAAAA,OAAO,EAACQ,SAAT;AAAmBP,MAAAA,OAAO,EAACQ;AAA3B,KAAD,CAAd;AACD,GAbD;;AAgBA,sBAAO;AAAA,4BAEL;AAAA,8BACE;AAAA,kBAAOX,IAAI,CAACE,OAAL,IAAc,EAAd,GAAiBF,IAAI,CAACE,OAAtB,GAA8B,MAAIF,IAAI,CAACE;AAA9C;AAAA;AAAA;AAAA;AAAA,cADF,oBAEE;AAAA,kBAAOF,IAAI,CAACG,OAAL,IAAc,EAAd,GAAiBH,IAAI,CAACG,OAAtB,GAA8B,MAAIH,IAAI,CAACG;AAA9C;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFK,eAOL;AAAA,6BACE;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,OAAO,EAAES;AAA9B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAPK;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAWD,CAhDD;;GAAMb,I;;KAAAA,I;AAkDN,eAAeA,IAAf","sourcesContent":["import React,{useState} from 'react';\r\n\r\nconst Main = () => {\r\n\r\n  const[time,setTime]=useState({minutes:1 ,seconds:0})\r\n  const[active,setActive]=useState(true)\r\n  const [interv,setInterv]=useState()\r\n\r\n  const [totalCount,setTotalCount]=useState(0)\r\n\r\n  let updateMin= time.minutes, updateSec=time.seconds  \r\n\r\n\r\n  const timer=()=>{\r\n    setActive(!active)\r\n    if(active){\r\n      run()\r\n      setInterv(setInterval(run,100))\r\n    } else {\r\n      clearInterval(interv)\r\n    }\r\n  } \r\n\r\n  const run = ()=>{\r\n    if(updateMin===0&&updateSec===1) {\r\n      setTotalCount(totalCount+1)\r\n      setTime({minutes:0,seconds:0})\r\n      return setTime({minutes:1 ,seconds:0})\r\n      \r\n    } \r\n    if(updateSec===0){\r\n      updateSec=60\r\n      updateMin--;\r\n    }\r\n    updateSec--\r\n    return setTime({minutes:updateMin,seconds:updateSec})\r\n  }\r\n\r\n\r\n  return <div>\r\n\r\n    <div>\r\n      <span>{time.minutes>=10?time.minutes:'0'+time.minutes}</span>:\r\n      <span>{time.seconds>=10?time.seconds:'0'+time.seconds}</span>\r\n    </div>\r\n\r\n    <div>\r\n      <input type=\"button\" onClick={timer}/>\r\n      </div>\r\n  </div>;\r\n};\r\n\r\nexport default Main;\r\n"]},"metadata":{},"sourceType":"module"}