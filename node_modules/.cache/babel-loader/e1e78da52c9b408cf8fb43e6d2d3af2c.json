{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bouku\\\\Desktop\\\\Time Tracker\\\\time-tracker\\\\src\\\\components\\\\NavContentSetting\\\\NavSettingTimer\\\\defaultRoundSetting.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useLocalStorage } from '../../../hooks/useLocalStorage';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { removeRoundAction, addRoundAction, setRoundAction } from '../../../store/totalCountReducer';\nimport InputSetting from '../../../UI/InputSetting/InputSetting';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DefaultRoundSetting = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const count = useSelector(state => state.totalCount);\n  useLocalStorage('SETTING:ROUND_COUNT', count.roundCount, setRoundAction);\n\n  const addRoundCount = () => {\n    if (count.roundCount < 10) dispatch(addRoundAction(1));\n  };\n\n  const removeRoundCount = () => {\n    if (count.roundCount > 2) dispatch(removeRoundAction(1));\n  };\n\n  return (\n    /*#__PURE__*/\n    // <div></div>\n    _jsxDEV(InputSetting, {\n      add: addRoundCount,\n      remove: removeRoundCount,\n      value: count.roundCount,\n      tittle: props.tittle,\n      count: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }, this)\n  );\n};\n\n_s(DefaultRoundSetting, \"4mdJnxkg2eO7Gdj9i0AQ0XEkpLY=\", false, function () {\n  return [useDispatch, useSelector, useLocalStorage];\n});\n\n_c = DefaultRoundSetting;\nexport default DefaultRoundSetting;\n\nvar _c;\n\n$RefreshReg$(_c, \"DefaultRoundSetting\");","map":{"version":3,"sources":["C:/Users/bouku/Desktop/Time Tracker/time-tracker/src/components/NavContentSetting/NavSettingTimer/defaultRoundSetting.jsx"],"names":["React","useEffect","useLocalStorage","useSelector","useDispatch","removeRoundAction","addRoundAction","setRoundAction","InputSetting","DefaultRoundSetting","props","dispatch","count","state","totalCount","roundCount","addRoundCount","removeRoundCount","tittle"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AAEA,SAAQC,eAAR,QAA8B,gCAA9B;AACA,SAAQC,WAAR,EAAoBC,WAApB,QAAsC,aAAtC;AACA,SAAQC,iBAAR,EAA0BC,cAA1B,EAAyCC,cAAzC,QAA8D,kCAA9D;AACA,OAAOC,YAAP,MAAyB,uCAAzB;;;AAEA,MAAMC,mBAAmB,GAAIC,KAAD,IAAW;AAAA;;AACrC,QAAMC,QAAQ,GAAEP,WAAW,EAA3B;AACA,QAAMQ,KAAK,GAACT,WAAW,CAAEU,KAAD,IAASA,KAAK,CAACC,UAAhB,CAAvB;AAEAZ,EAAAA,eAAe,CAAC,qBAAD,EAAwBU,KAAK,CAACG,UAA9B,EAAyCR,cAAzC,CAAf;;AAEA,QAAMS,aAAa,GAAC,MAAI;AACtB,QAAGJ,KAAK,CAACG,UAAN,GAAiB,EAApB,EAAwBJ,QAAQ,CAACL,cAAc,CAAC,CAAD,CAAf,CAAR;AACzB,GAFD;;AAGA,QAAMW,gBAAgB,GAAC,MAAI;AACzB,QAAGL,KAAK,CAACG,UAAN,GAAiB,CAApB,EAAuBJ,QAAQ,CAACN,iBAAiB,CAAC,CAAD,CAAlB,CAAR;AACxB,GAFD;;AAIA;AAAA;AACE;AACA,YAAC,YAAD;AACA,MAAA,GAAG,EAAEW,aADL;AAEA,MAAA,MAAM,EAAEC,gBAFR;AAGA,MAAA,KAAK,EAAEL,KAAK,CAACG,UAHb;AAIA,MAAA,MAAM,EAAEL,KAAK,CAACQ,MAJd;AAKA,MAAA,KAAK,EAAE;AALP;AAAA;AAAA;AAAA;AAAA;AAFF;AASD,CAtBD;;GAAMT,mB;UACYL,W,EACJD,W,EAEZD,e;;;KAJIO,mB;AAwBN,eAAeA,mBAAf","sourcesContent":["import React,{useEffect} from 'react';\r\n\r\nimport {useLocalStorage} from '../../../hooks/useLocalStorage'\r\nimport {useSelector,useDispatch} from 'react-redux';\r\nimport {removeRoundAction,addRoundAction,setRoundAction} from '../../../store/totalCountReducer'\r\nimport InputSetting from '../../../UI/InputSetting/InputSetting';\r\n\r\nconst DefaultRoundSetting = (props) => {\r\n  const dispatch= useDispatch()\r\n  const count=useSelector((state)=>state.totalCount)\r\n\r\n  useLocalStorage('SETTING:ROUND_COUNT', count.roundCount,setRoundAction)\r\n\r\n  const addRoundCount=()=>{\r\n    if(count.roundCount<10) dispatch(addRoundAction(1))\r\n  }\r\n  const removeRoundCount=()=>{\r\n    if(count.roundCount>2) dispatch(removeRoundAction(1))\r\n  }\r\n\r\n  return (\r\n    // <div></div>\r\n    <InputSetting \r\n    add={addRoundCount} \r\n    remove={removeRoundCount} \r\n    value={count.roundCount} \r\n    tittle={props.tittle}\r\n    count={true}/>\r\n  )\r\n};\r\n\r\nexport default DefaultRoundSetting;\r\n"]},"metadata":{},"sourceType":"module"}