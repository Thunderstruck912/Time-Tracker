{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bouku\\\\Desktop\\\\Time Tracker\\\\time-tracker\\\\src\\\\components\\\\NavContentSetting\\\\NavSettingTimer\\\\defaultCountSetting.jsx\",\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addDefaultCountAction, removeDefaultCountAction, setDefaultCountAction } from '../../../store/totalCountReducer';\nimport InputSetting from '../../../UI/InputSetting/InputSetting';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DefaultCountSetting = props => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const dispatch = useDispatch();\n  const count = useSelector(state => state.totalCount); // useEffect(() =>{\n  //   if(localStorage.getItem('SETTING:DEFAULT_COUNT')) dispatch(setDefaultCountAction(+localStorage.getItem('SETTING:DEFAULT_COUNT')))\n  // },[])\n  // useEffect(() =>{\n  //   localStorage.setItem('SETTING:DEFAULT_COUNT',count.defaultCount)\n  // },[count.defaultCount])\n\n  const useLocalStorage = (key, defaultValue) => {\n    _s();\n\n    const getValue = () => {\n      const storage = localStorage.getItem(key);\n      if (storage) return JSON.parse(storage);else return defaultValue;\n    };\n\n    const [value, setValue] = useState(getValue);\n    useEffect(() => {\n      localStorage.setItem(key, JSON.stringify(value));\n    }, [value]);\n    return [value, setValue];\n  };\n\n  _s(useLocalStorage, \"Y4TlwO5A2xDRAyLjYiZ/PuAoQEY=\");\n\n  const [defaultCount, setDefaultCount] = useLocalStorage('SETTING:DEFAULT_COUNT', count.defaultCount); // ========================================\n\n  const addDefaultCount = () => {\n    if (count.defaultCount < 24) dispatch(addDefaultCountAction(1));\n  };\n\n  const removeDefaultCount = () => {\n    if (count.defaultCount > 1) dispatch(removeDefaultCountAction(1));\n  };\n\n  return /*#__PURE__*/_jsxDEV(InputSetting, {\n    add: addDefaultCount,\n    remove: removeDefaultCount,\n    value: count.defaultCount,\n    tittle: props.tittle,\n    count: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(DefaultCountSetting, \"7Nfrkhqnq7qWxJnUyEYRnUpbqtU=\", true, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = DefaultCountSetting;\nexport default DefaultCountSetting;\n\nvar _c;\n\n$RefreshReg$(_c, \"DefaultCountSetting\");","map":{"version":3,"sources":["C:/Users/bouku/Desktop/Time Tracker/time-tracker/src/components/NavContentSetting/NavSettingTimer/defaultCountSetting.jsx"],"names":["React","useEffect","useState","useSelector","useDispatch","addDefaultCountAction","removeDefaultCountAction","setDefaultCountAction","InputSetting","DefaultCountSetting","props","dispatch","count","state","totalCount","useLocalStorage","key","defaultValue","getValue","storage","localStorage","getItem","JSON","parse","value","setValue","setItem","stringify","defaultCount","setDefaultCount","addDefaultCount","removeDefaultCount","tittle"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAwBC,QAAxB,QAAuC,OAAvC;AAEA,SAAQC,WAAR,EAAoBC,WAApB,QAAsC,aAAtC;AACA,SAAQC,qBAAR,EAA8BC,wBAA9B,EAAuDC,qBAAvD,QAAmF,kCAAnF;AACA,OAAOC,YAAP,MAAyB,uCAAzB;;;AAEA,MAAMC,mBAAmB,GAAIC,KAAD,IAAW;AAAA;;AAAA;;AACrC,QAAMC,QAAQ,GAAEP,WAAW,EAA3B;AACA,QAAMQ,KAAK,GAACT,WAAW,CAAEU,KAAD,IAASA,KAAK,CAACC,UAAhB,CAAvB,CAFqC,CAIrC;AACA;AACA;AAEA;AACA;AACA;;AAEF,QAAMC,eAAe,GAAC,CAACC,GAAD,EAAMC,YAAN,KAAsB;AAAA;;AAE1C,UAAMC,QAAQ,GAAC,MAAK;AAClB,YAAMC,OAAO,GAAEC,YAAY,CAACC,OAAb,CAAqBL,GAArB,CAAf;AACA,UAAGG,OAAH,EAAY,OAAOG,IAAI,CAACC,KAAL,CAAWJ,OAAX,CAAP,CAAZ,KACK,OAAOF,YAAP;AACN,KAJD;;AAMA,UAAM,CAACO,KAAD,EAAOC,QAAP,IAAiBvB,QAAQ,CAACgB,QAAD,CAA/B;AAEAjB,IAAAA,SAAS,CAAC,MAAK;AACbmB,MAAAA,YAAY,CAACM,OAAb,CAAqBV,GAArB,EAAyBM,IAAI,CAACK,SAAL,CAAeH,KAAf,CAAzB;AACD,KAFQ,EAEP,CAACA,KAAD,CAFO,CAAT;AAIA,WAAO,CAACA,KAAD,EAAOC,QAAP,CAAP;AACD,GAfD;;AAZuC,KAYjCV,eAZiC;;AA6BvC,QAAM,CAACa,YAAD,EAAcC,eAAd,IAA+Bd,eAAe,CAAC,uBAAD,EAAyBH,KAAK,CAACgB,YAA/B,CAApD,CA7BuC,CAkCrC;;AAcA,QAAME,eAAe,GAAC,MAAI;AACxB,QAAGlB,KAAK,CAACgB,YAAN,GAAmB,EAAtB,EAA0BjB,QAAQ,CAACN,qBAAqB,CAAC,CAAD,CAAtB,CAAR;AAC3B,GAFD;;AAGA,QAAM0B,kBAAkB,GAAC,MAAI;AAC3B,QAAGnB,KAAK,CAACgB,YAAN,GAAmB,CAAtB,EAA0BjB,QAAQ,CAACL,wBAAwB,CAAC,CAAD,CAAzB,CAAR;AAC3B,GAFD;;AAGA,sBACE,QAAC,YAAD;AACA,IAAA,GAAG,EAAEwB,eADL;AAEA,IAAA,MAAM,EAAEC,kBAFR;AAGA,IAAA,KAAK,EAAEnB,KAAK,CAACgB,YAHb;AAIA,IAAA,MAAM,EAAElB,KAAK,CAACsB,MAJd;AAKA,IAAA,KAAK,EAAE;AALP;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CA9DD;;IAAMvB,mB;UACYL,W,EACJD,W;;;KAFRM,mB;AAgEN,eAAeA,mBAAf","sourcesContent":["import React,{useEffect,useState} from 'react';\r\n\r\nimport {useSelector,useDispatch} from 'react-redux';\r\nimport {addDefaultCountAction,removeDefaultCountAction,setDefaultCountAction} from '../../../store/totalCountReducer'\r\nimport InputSetting from '../../../UI/InputSetting/InputSetting';\r\n\r\nconst DefaultCountSetting = (props) => {\r\n  const dispatch= useDispatch()\r\n  const count=useSelector((state)=>state.totalCount)\r\n\r\n  // useEffect(() =>{\r\n  //   if(localStorage.getItem('SETTING:DEFAULT_COUNT')) dispatch(setDefaultCountAction(+localStorage.getItem('SETTING:DEFAULT_COUNT')))\r\n  // },[])\r\n  \r\n  // useEffect(() =>{\r\n  //   localStorage.setItem('SETTING:DEFAULT_COUNT',count.defaultCount)\r\n  // },[count.defaultCount])\r\n\r\nconst useLocalStorage=(key, defaultValue) =>{\r\n\r\n  const getValue=() =>{\r\n    const storage =localStorage.getItem(key)\r\n    if(storage) return JSON.parse(storage)\r\n    else return defaultValue\r\n  }\r\n\r\n  const [value,setValue]=useState(getValue)\r\n\r\n  useEffect(() =>{\r\n    localStorage.setItem(key,JSON.stringify(value))\r\n  },[value])\r\n\r\n  return [value,setValue]\r\n}\r\n\r\nconst [defaultCount,setDefaultCount]=useLocalStorage('SETTING:DEFAULT_COUNT',count.defaultCount)\r\n\r\n\r\n\r\n\r\n  // ========================================\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  \r\n\r\n  const addDefaultCount=()=>{\r\n    if(count.defaultCount<24) dispatch(addDefaultCountAction(1))\r\n  }\r\n  const removeDefaultCount=()=>{\r\n    if(count.defaultCount>1)  dispatch(removeDefaultCountAction(1))\r\n  }\r\n  return (\r\n    <InputSetting \r\n    add={addDefaultCount} \r\n    remove={removeDefaultCount} \r\n    value={count.defaultCount} \r\n    tittle={props.tittle}\r\n    count={true}/>\r\n  )\r\n};\r\n\r\nexport default DefaultCountSetting;\r\n"]},"metadata":{},"sourceType":"module"}