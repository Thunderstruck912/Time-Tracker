{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bouku\\\\Desktop\\\\Time Tracker\\\\time-tracker\\\\src\\\\components\\\\Timer\\\\Timer.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setTimeAction, resetTimeAction, resetLittlePauseTimeAction, resetLargePauseTimeAction } from '../../store/timeReducer';\nimport { setStatusAction, setLittlePauseAction } from '../../store/timerStatus';\nimport { setTotalCountAction } from '../../store/totalCountReducer';\nimport { defaultTimerSetting, timerPauseSetting } from '../../utilites/timerSettings';\nimport { useLocalStorage } from '../../hooks/useLocalStorage';\nimport InputTimer from '../../UI/InputTimer/InputTimer';\nimport classes from '../Timer/Timer.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Timer = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const timer = useSelector(state => state.time.timer);\n  const time = useSelector(state => state.time);\n  const status = useSelector(state => state.status);\n  const totalCount = useSelector(state => state.totalCount.totalCount);\n  const [firstRun, setFirstRun] = useState(localStorage.getItem('firstRun') || true);\n  useLocalStorage('SETTING:LITTLE_PAUSE_STATUS', status.littlePause, setLittlePauseAction);\n  let updateM = timer.minutes,\n      updateS = timer.seconds;\n  const [st, setSt] = useState(false);\n  useEffect(() => {\n    localStorage.setItem('firstRun', firstRun);\n  }, [firstRun]);\n  useEffect(() => {\n    document.title = `${timer.minutes >= 10 ? timer.minutes : '0' + timer.minutes}:${timer.seconds >= 10 ? timer.seconds : '0' + timer.seconds} · ${status.littlePause ? 'Перерыв' : 'Работа'}`;\n  }, [timer, status.littlePause]);\n  useEffect(() => {\n    if (!firstRun) {\n      if (timer !== undefined && timer.minutes !== 0) {\n        localStorage.setItem('timerTime', JSON.stringify(timer));\n      }\n    }\n  }, [timer]);\n  useEffect(() => {\n    if (localStorage.getItem('timerTime')) {\n      let t = JSON.parse(localStorage.getItem('timerTime'));\n      dispatch(setTimeAction({\n        minutes: t.minutes,\n        seconds: t.seconds\n      }));\n    } else {\n      dispatch(resetTimeAction());\n    }\n  }, []);\n  useEffect(() => {\n    if (status.littlePause && st) dispatch(setStatusAction({\n      play: true\n    }));\n  }, [status.littlePause]); // useEffect(()=>{\n  //   setTimeout(()=>{\n  //     if(status.littlePause) dispatch(setStatusAction({play:false}))\n  //     console.log('setPause')\n  //   },1000)\n  // },[])\n\n  useEffect(() => {\n    if (status.play) {\n      if (firstRun) setFirstRun(false);\n      const intervalId = setInterval(() => {\n        if (updateM === 0 && updateS === 1) {\n          setSt(true);\n          dispatch(setStatusAction({\n            play: !status.play\n          }));\n\n          if (!status.littlePause) {\n            dispatch(timerPauseSetting({\n              status,\n              totalCount\n            }));\n            return clearInterval(intervalId);\n          } else dispatch(defaultTimerSetting());\n\n          return clearInterval(intervalId);\n        }\n\n        if (updateS === 0) {\n          updateS = 60;\n          updateM--;\n        }\n\n        updateS--;\n        dispatch(setTimeAction({\n          minutes: updateM,\n          seconds: updateS\n        }));\n      }, 5);\n      return () => clearInterval(intervalId);\n    }\n\n    return undefined;\n  }, [status.play, status.littlePause]);\n\n  const setRun = () => setFirstRun(false);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.timer,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.span_wrapper,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: classes.span,\n        children: timer.minutes >= 10 ? timer.minutes : '0' + timer.minutes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: classes.span,\n        children: \":\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: classes.span,\n        children: timer.seconds >= 10 ? timer.seconds : '0' + timer.seconds\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.img,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.wrapper_img,\n        style: {\n          marginLeft: -(timer.minutes * 60 + timer.seconds)\n        },\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: require('./icon/scale.png'),\n          alt: 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(InputTimer, {\n      status: status,\n      setFirstRun: setRun\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Timer, \"pdPW6MWKtNcg7SFFEx8bL2qmaH0=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector, useLocalStorage];\n});\n\n_c = Timer;\nexport default Timer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"sources":["C:/Users/bouku/Desktop/Time Tracker/time-tracker/src/components/Timer/Timer.jsx"],"names":["React","useState","useEffect","useSelector","useDispatch","setTimeAction","resetTimeAction","resetLittlePauseTimeAction","resetLargePauseTimeAction","setStatusAction","setLittlePauseAction","setTotalCountAction","defaultTimerSetting","timerPauseSetting","useLocalStorage","InputTimer","classes","Timer","dispatch","timer","state","time","status","totalCount","firstRun","setFirstRun","localStorage","getItem","littlePause","updateM","minutes","updateS","seconds","st","setSt","setItem","document","title","undefined","JSON","stringify","t","parse","play","intervalId","setInterval","clearInterval","setRun","span_wrapper","span","img","wrapper_img","marginLeft","require"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react';\r\nimport {useSelector,useDispatch} from 'react-redux';\r\nimport { setTimeAction, resetTimeAction,resetLittlePauseTimeAction,resetLargePauseTimeAction } from '../../store/timeReducer';\r\nimport {setStatusAction,setLittlePauseAction} from '../../store/timerStatus'\r\nimport {setTotalCountAction} from '../../store/totalCountReducer'\r\nimport { defaultTimerSetting,timerPauseSetting } from '../../utilites/timerSettings';\r\nimport {useLocalStorage} from '../../hooks/useLocalStorage'\r\n\r\nimport InputTimer from '../../UI/InputTimer/InputTimer';\r\nimport classes from '../Timer/Timer.module.css'\r\n\r\n\r\nconst Timer = () => {\r\n  const dispatch=useDispatch()\r\n  const timer=useSelector((state)=>state.time.timer)\r\n  const time=useSelector((state)=>state.time)\r\n  const status=useSelector((state)=>state.status)\r\n  const totalCount=useSelector((state)=>state.totalCount.totalCount)\r\n  const [firstRun,setFirstRun]=useState(localStorage.getItem('firstRun')||true)\r\n  useLocalStorage('SETTING:LITTLE_PAUSE_STATUS',status.littlePause,setLittlePauseAction)\r\n  let updateM= timer.minutes, updateS=timer.seconds  \r\n  const [st,setSt]=useState(false)\r\n\r\n\r\n  useEffect(() =>{\r\n    localStorage.setItem('firstRun',firstRun)\r\n  },[firstRun])\r\n\r\n  useEffect(() => {\r\n    document.title=`${timer.minutes>=10?timer.minutes:'0'+timer.minutes}:${timer.seconds>=10?timer.seconds:'0'+timer.seconds} · ${status.littlePause?'Перерыв':'Работа'}`\r\n  }, [timer,status.littlePause]);\r\n\r\n  useEffect(() =>{\r\n    if(!firstRun){\r\n      if(timer!==undefined && timer.minutes!==0) {\r\n        localStorage.setItem('timerTime',JSON.stringify(timer))}\r\n    }\r\n  },[timer])\r\n\r\n  useEffect(() =>{\r\n    if(localStorage.getItem('timerTime')){\r\n      let t= JSON.parse(localStorage.getItem('timerTime'))\r\n      dispatch(setTimeAction({minutes:t.minutes,seconds:t.seconds}))\r\n    } else {\r\n      dispatch(resetTimeAction())\r\n    }\r\n  },[])\r\n\r\n  useEffect(()=>{\r\n    if(status.littlePause&&st) dispatch(setStatusAction({play:true}))\r\n  },[status.littlePause])\r\n\r\n  // useEffect(()=>{\r\n  //   setTimeout(()=>{\r\n  //     if(status.littlePause) dispatch(setStatusAction({play:false}))\r\n  //     console.log('setPause')\r\n  //   },1000)\r\n  // },[])\r\n\r\n\r\n\r\n useEffect(() =>{\r\n  if(status.play){\r\n    if(firstRun) setFirstRun(false)\r\n    const intervalId = setInterval(()=>{\r\n      if(updateM===0&&updateS===1) {\r\n        setSt(true)\r\n        dispatch(setStatusAction({play:!status.play}))\r\n        if(!status.littlePause){\r\n          dispatch( timerPauseSetting({status,totalCount}))\r\n          return clearInterval(intervalId)\r\n          }else\r\n          dispatch(defaultTimerSetting())\r\n          return clearInterval(intervalId)\r\n        }\r\n    if(updateS===0) {updateS=60;updateM--}\r\n    updateS--\r\n    dispatch(setTimeAction({minutes:updateM,seconds:updateS}))\r\n    },5);\r\n    return ()=>clearInterval(intervalId);\r\n   } return undefined;\r\n },[status.play,status.littlePause])\r\n\r\n  const setRun = () => setFirstRun(false)\r\n\r\n  return (\r\n    <div className={classes.timer} >\r\n  <div className={classes.span_wrapper}>\r\n    <span className={classes.span}>{timer.minutes>=10?timer.minutes:'0'+timer.minutes}</span>\r\n    <span className={classes.span}>:</span>\r\n    <span className={classes.span}>{timer.seconds>=10?timer.seconds:'0'+timer.seconds}</span>\r\n  </div>\r\n  \r\n  <div className={classes.img} >\r\n    <div className={classes.wrapper_img} style={{marginLeft:-(timer.minutes*60+timer.seconds)}}>\r\n    <img src={require('./icon/scale.png')} alt={1}></img>\r\n    </div>\r\n  </div>\r\n  <InputTimer status={status} setFirstRun={setRun}/>\r\n  </div>\r\n  )};\r\n\r\n\r\nexport default Timer;\r\n"]},"metadata":{},"sourceType":"module"}