{"ast":null,"code":"import { resetTimeAction, resetLittlePauseTimeAction, resetLargePauseTimeAction } from '../store/timeReducer';\nimport { setStatusAction, setLittlePauseAction, setReloadStatusAction } from '../store/timerStatus';\nimport { addTotalCountAction } from '../store/totalCountReducer';\nexport const defaultTimerSetting = () => {\n  return dispatch => {\n    dispatch(setReloadStatusAction(true));\n    dispatch(resetTimeAction());\n    dispatch(setLittlePauseAction(false));\n    dispatch(setStatusAction({\n      play: true\n    }));\n  };\n};\nexport const timerPauseSetting = _ref => {\n  let {\n    status,\n    totalCount\n  } = _ref;\n  return dispatch => {\n    // dispatch(setReloadStatusAction(true))\n    if ((totalCount + 1) % 3 === 0) {\n      dispatch(setLittlePauseAction(!status.littlePause));\n      dispatch(resetLargePauseTimeAction());\n      dispatch(addTotalCountAction(1));\n      return;\n    } else dispatch(setLittlePauseAction(!status.littlePause));\n\n    dispatch(resetLittlePauseTimeAction());\n    dispatch(addTotalCountAction(1));\n    return;\n  };\n};","map":{"version":3,"sources":["C:/Users/bouku/Desktop/Time Tracker/time-tracker/src/utilites/timerSettings.js"],"names":["resetTimeAction","resetLittlePauseTimeAction","resetLargePauseTimeAction","setStatusAction","setLittlePauseAction","setReloadStatusAction","addTotalCountAction","defaultTimerSetting","dispatch","play","timerPauseSetting","status","totalCount","littlePause"],"mappings":"AAAA,SAAQA,eAAR,EAAwBC,0BAAxB,EAAmDC,yBAAnD,QAAoF,sBAApF;AACA,SAAQC,eAAR,EAAwBC,oBAAxB,EAA6CC,qBAA7C,QAAyE,sBAAzE;AACA,SAAQC,mBAAR,QAAkC,4BAAlC;AAEA,OAAO,MAAMC,mBAAmB,GAAG,MAAI;AACrC,SAAQC,QAAD,IAAY;AACjBA,IAAAA,QAAQ,CAACH,qBAAqB,CAAC,IAAD,CAAtB,CAAR;AACAG,IAAAA,QAAQ,CAACR,eAAe,EAAhB,CAAR;AACAQ,IAAAA,QAAQ,CAACJ,oBAAoB,CAAC,KAAD,CAArB,CAAR;AACAI,IAAAA,QAAQ,CAACL,eAAe,CAAC;AAACM,MAAAA,IAAI,EAAC;AAAN,KAAD,CAAhB,CAAR;AACD,GALD;AAMD,CAPM;AASP,OAAO,MAAMC,iBAAiB,GAAC,QAAuB;AAAA,MAAtB;AAACC,IAAAA,MAAD;AAAQC,IAAAA;AAAR,GAAsB;AACpD,SAAQJ,QAAD,IAAY;AACjB;AACA,QAAG,CAACI,UAAU,GAAC,CAAZ,IAAe,CAAf,KAAmB,CAAtB,EAAwB;AACtBJ,MAAAA,QAAQ,CAACJ,oBAAoB,CAAC,CAACO,MAAM,CAACE,WAAT,CAArB,CAAR;AACAL,MAAAA,QAAQ,CAACN,yBAAyB,EAA1B,CAAR;AACAM,MAAAA,QAAQ,CAACF,mBAAmB,CAAC,CAAD,CAApB,CAAR;AACA;AACD,KALD,MAMEE,QAAQ,CAACJ,oBAAoB,CAAC,CAACO,MAAM,CAACE,WAAT,CAArB,CAAR;;AACAL,IAAAA,QAAQ,CAACP,0BAA0B,EAA3B,CAAR;AACAO,IAAAA,QAAQ,CAACF,mBAAmB,CAAC,CAAD,CAApB,CAAR;AACA;AACH,GAZD;AAaE,CAdG","sourcesContent":["import {resetTimeAction,resetLittlePauseTimeAction,resetLargePauseTimeAction } from '../store/timeReducer';\r\nimport {setStatusAction,setLittlePauseAction,setReloadStatusAction} from '../store/timerStatus'\r\nimport {addTotalCountAction} from '../store/totalCountReducer'\r\n\r\nexport const defaultTimerSetting = ()=>{\r\n  return (dispatch)=>{\r\n    dispatch(setReloadStatusAction(true))\r\n    dispatch(resetTimeAction())\r\n    dispatch(setLittlePauseAction(false))\r\n    dispatch(setStatusAction({play:true}))\r\n  }\r\n}\r\n\r\nexport const timerPauseSetting=({status,totalCount})=>{\r\n  return (dispatch)=>{\r\n    // dispatch(setReloadStatusAction(true))\r\n    if((totalCount+1)%3===0){\r\n      dispatch(setLittlePauseAction(!status.littlePause))\r\n      dispatch(resetLargePauseTimeAction())\r\n      dispatch(addTotalCountAction(1))    \r\n      return\r\n    }else\r\n      dispatch(setLittlePauseAction(!status.littlePause))\r\n      dispatch(resetLittlePauseTimeAction())\r\n      dispatch(addTotalCountAction(1))\r\n      return\r\n  }\r\n   }\r\n"]},"metadata":{},"sourceType":"module"}