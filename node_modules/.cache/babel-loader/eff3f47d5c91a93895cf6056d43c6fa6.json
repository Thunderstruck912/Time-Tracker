{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { setTotalCountAction } from \"../store/totalCountReducer\";\nimport { DATA } from \"../utilites/date\";\nconst statsName = \"DATA:STATISTICS\";\nconst {\n  dateNow\n} = DATA;\nexport const useStats = _ref => {\n  _s();\n\n  let {\n    count,\n    status\n  } = _ref;\n  const dispatch = useDispatch();\n  const LOCAL = JSON.parse(localStorage.getItem(statsName));\n  const [stats, setStats] = useState(LOCAL || []); // ADD AND SAVE LOCAL STORAGE //\n\n  useEffect(() => {\n    const newStats = {\n      data: dateNow(),\n      count: count.totalCount + 1\n    };\n    setStats([...stats, newStats]);\n    if (stats && status.reloadStatus) localStorage.setItem(statsName, JSON.stringify(stats));\n  }, [count.totalCount]); // LOAD AND AUTO RECET NEXT DAY //\n\n  useEffect(() => {\n    if (JSON.parse(localStorage.getItem(statsName))) {\n      let statistics = JSON.parse(localStorage.getItem(statsName));\n\n      if (statistics.length >= 1) {\n        dispatch(setTotalCountAction(statistics[statistics.length - 1].count));\n\n        if (statistics[0].data !== statistics[statistics.length - 1].data) {\n          localStorage.removeItem(statsName);\n          dispatch(setTotalCountAction(0));\n        }\n      }\n    }\n  }, []);\n};\n\n_s(useStats, \"1L3BBG/ceNlFBsrxgvoYZ8zAnMA=\", false, function () {\n  return [useDispatch];\n});","map":{"version":3,"sources":["C:/Users/bouku/Desktop/Time Tracker/time-tracker/src/hooks/useStats.js"],"names":["useState","useEffect","useDispatch","setTotalCountAction","DATA","statsName","dateNow","useStats","count","status","dispatch","LOCAL","JSON","parse","localStorage","getItem","stats","setStats","newStats","data","totalCount","reloadStatus","setItem","stringify","statistics","length","removeItem"],"mappings":";;AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,SAAQC,mBAAR,QAAkC,4BAAlC;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AAEA,MAAMC,SAAS,GAAG,iBAAlB;AACA,MAAM;AAACC,EAAAA;AAAD,IAAWF,IAAjB;AAGA,OAAO,MAAMG,QAAQ,GAAG,QAAoB;AAAA;;AAAA,MAAnB;AAACC,IAAAA,KAAD;AAAOC,IAAAA;AAAP,GAAmB;AAC1C,QAAMC,QAAQ,GAAER,WAAW,EAA3B;AACA,QAAMS,KAAK,GAACC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqBV,SAArB,CAAX,CAAZ;AACD,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBjB,QAAQ,CACjCW,KAAK,IAAI,EADwB,CAAlC,CAH2C,CAO1C;;AACDV,EAAAA,SAAS,CAAC,MAAM;AACf,UAAMiB,QAAQ,GAAG;AAACC,MAAAA,IAAI,EAAEb,OAAO,EAAd;AAAkBE,MAAAA,KAAK,EAAEA,KAAK,CAACY,UAAN,GAAmB;AAA5C,KAAjB;AAEEH,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAUE,QAAV,CAAD,CAAR;AACF,QAAIF,KAAK,IAAIP,MAAM,CAACY,YAApB,EACCP,YAAY,CAACQ,OAAb,CAAqBjB,SAArB,EAAgCO,IAAI,CAACW,SAAL,CAAeP,KAAf,CAAhC;AACD,GANQ,EAMN,CAACR,KAAK,CAACY,UAAP,CANM,CAAT,CAR2C,CAgB1C;;AACCnB,EAAAA,SAAS,CAAC,MAAM;AACjB,QAAIW,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqBV,SAArB,CAAX,CAAJ,EAAiD;AAChD,UAAImB,UAAU,GAAGZ,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqBV,SAArB,CAAX,CAAjB;;AACA,UAAImB,UAAU,CAACC,MAAX,IAAqB,CAAzB,EAA4B;AAC3Bf,QAAAA,QAAQ,CAACP,mBAAmB,CAACqB,UAAU,CAACA,UAAU,CAACC,MAAX,GAAoB,CAArB,CAAV,CAAkCjB,KAAnC,CAApB,CAAR;;AACA,YAAIgB,UAAU,CAAC,CAAD,CAAV,CAAcL,IAAd,KAAuBK,UAAU,CAACA,UAAU,CAACC,MAAX,GAAoB,CAArB,CAAV,CAAkCN,IAA7D,EAAmE;AAClEL,UAAAA,YAAY,CAACY,UAAb,CAAwBrB,SAAxB;AACAK,UAAAA,QAAQ,CAACP,mBAAmB,CAAC,CAAD,CAApB,CAAR;AACA;AACD;AACD;AACD,GAXU,EAWR,EAXQ,CAAT;AAYF,CA7BM;;GAAMI,Q;UACKL,W","sourcesContent":["import {useState, useEffect} from \"react\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {setTotalCountAction} from \"../store/totalCountReducer\"\r\nimport {DATA} from \"../utilites/date\";\r\n\r\nconst statsName = \"DATA:STATISTICS\";\r\nconst {dateNow}= DATA;\r\n\r\n\r\nexport const useStats = ({count,status}) => {\r\n  const dispatch= useDispatch()\r\n  const LOCAL=JSON.parse(localStorage.getItem(statsName))\r\n\tconst [stats, setStats] = useState(\r\n\t\tLOCAL || [],\r\n\t);\r\n\r\n  // ADD AND SAVE LOCAL STORAGE //\r\n\tuseEffect(() => {\r\n\t\tconst newStats = {data: dateNow(), count: count.totalCount + 1};\r\n    \r\n    setStats([...stats,newStats]);\r\n\t\tif (stats && status.reloadStatus)\r\n\t\t\tlocalStorage.setItem(statsName, JSON.stringify(stats));\r\n\t}, [count.totalCount]);\r\n\r\n  // LOAD AND AUTO RECET NEXT DAY //\r\n  \tuseEffect(() => {\r\n\t\tif (JSON.parse(localStorage.getItem(statsName))) {\r\n\t\t\tlet statistics = JSON.parse(localStorage.getItem(statsName));\r\n\t\t\tif (statistics.length >= 1) {\r\n\t\t\t\tdispatch(setTotalCountAction(statistics[statistics.length - 1].count));\r\n\t\t\t\tif (statistics[0].data !== statistics[statistics.length - 1].data) {\r\n\t\t\t\t\tlocalStorage.removeItem(statsName);\r\n\t\t\t\t\tdispatch(setTotalCountAction(0));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}, []);\r\n};\r\n"]},"metadata":{},"sourceType":"module"}