{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bouku\\\\Desktop\\\\Time Tracker\\\\time-tracker\\\\src\\\\components\\\\Timer\\\\Timer.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setTimeAction, resetTimeAction, setLittlePauseTimeAction } from '../../store/timeReducer';\nimport { setStatusAction, setLittlePauseAction } from '../../store/timerStatus';\nimport { setTotalCountAction } from '../../store/totalCountReducer';\nimport InputTimer from '../../UI/InputTimer/InputTimer';\nimport classes from '../Timer/Timer.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Timer = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const time = useSelector(state => state.time.timer);\n  const timer = useSelector(state => state.time);\n  const status = useSelector(state => state.status);\n  const pause = useSelector(state => state.status.littlePause);\n  const totalCount = useSelector(state => state.totalCount.totalCount);\n  const [firstRun, setFirstRun] = useState(true);\n  let updateM = time.minutes,\n      updateS = time.seconds;\n  useEffect(() => {\n    dispatch(resetTimeAction());\n  }, []);\n  useEffect(() => {\n    if (!status.pause) {\n      if (firstRun) dispatch(resetTimeAction());\n    }\n  }, [timer.defaultTime]);\n  useEffect(() => {\n    document.title = `${time.minutes >= 10 ? time.minutes : '0' + time.minutes}:${time.seconds >= 10 ? time.seconds : '0' + time.seconds}`;\n  }, [time]);\n\n  const timerPauseSetting = () => {\n    if ((totalCount + 1) % 3 === 0) {\n      dispatch(setLittlePauseAction({\n        pause: !pause\n      }));\n      dispatch(setTimeAction({\n        value1: 10,\n        value2: 25\n      }));\n      dispatch(setTotalCountAction(1));\n      return;\n    } else dispatch(setLittlePauseAction({\n      pause: !pause\n    }));\n\n    dispatch(setLittlePauseTimeAction());\n    dispatch(setTotalCountAction(1));\n    return;\n  };\n\n  const defaultTimerSetting = () => {\n    dispatch(resetTimeAction());\n    dispatch(setLittlePauseAction({\n      pause: false\n    }));\n    dispatch(setStatusAction({\n      play: true\n    }));\n  };\n\n  useEffect(() => {\n    if (status.play) {\n      if (firstRun) setFirstRun(false);\n      const intervalId = setInterval(() => {\n        if (updateM === 0 && updateS === 1) {\n          dispatch(setStatusAction({\n            play: !status.play\n          }));\n\n          if (!pause) {\n            timerPauseSetting();\n            return clearInterval(intervalId);\n          } else defaultTimerSetting();\n\n          return clearInterval(intervalId);\n        }\n\n        if (updateS === 0) {\n          updateS = 60;\n          updateM--;\n        }\n\n        updateS--;\n        dispatch(setTimeAction({\n          value1: updateM,\n          value2: updateS\n        }));\n      }, 10);\n      return () => clearInterval(intervalId);\n    }\n\n    return undefined;\n  }, [status.play, pause]);\n  useEffect(() => {\n    if (pause) dispatch(setStatusAction({\n      play: true\n    }));\n  }, [pause]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.timer,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.span_wrapper,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: classes.span,\n        children: time.minutes >= 10 ? time.minutes : '0' + time.minutes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: classes.span,\n        children: \":\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: classes.span,\n        children: time.seconds >= 10 ? time.seconds : '0' + time.seconds\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.img,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.wrapper_img,\n        style: {\n          marginLeft: -(time.minutes * 60 + time.seconds)\n        },\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: require('./icon/scale.png'),\n          alt: 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(InputTimer, {\n      status: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Timer, \"OFqEARexkwW6AhPrS6OvT+Ywg8Y=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = Timer;\nexport default Timer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"sources":["C:/Users/bouku/Desktop/Time Tracker/time-tracker/src/components/Timer/Timer.jsx"],"names":["React","useState","useEffect","useSelector","useDispatch","setTimeAction","resetTimeAction","setLittlePauseTimeAction","setStatusAction","setLittlePauseAction","setTotalCountAction","InputTimer","classes","Timer","dispatch","time","state","timer","status","pause","littlePause","totalCount","firstRun","setFirstRun","updateM","minutes","updateS","seconds","defaultTime","document","title","timerPauseSetting","value1","value2","defaultTimerSetting","play","intervalId","setInterval","clearInterval","undefined","span_wrapper","span","img","wrapper_img","marginLeft","require"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react';\r\nimport {useSelector,useDispatch} from 'react-redux';\r\nimport { setTimeAction, resetTimeAction,setLittlePauseTimeAction, } from '../../store/timeReducer';\r\nimport {setStatusAction,setLittlePauseAction} from '../../store/timerStatus'\r\nimport {setTotalCountAction} from '../../store/totalCountReducer'\r\nimport InputTimer from '../../UI/InputTimer/InputTimer';\r\n\r\nimport classes from '../Timer/Timer.module.css'\r\n\r\n\r\nconst Timer = () => {\r\n  const dispatch=useDispatch()\r\n  const time=useSelector((state)=>state.time.timer)\r\n  const timer=useSelector((state)=>state.time)\r\n  const status=useSelector((state)=>state.status)\r\n  const pause=useSelector((state)=>state.status.littlePause)\r\n  const totalCount=useSelector((state)=>state.totalCount.totalCount)\r\n  const [firstRun,setFirstRun]=useState(true)\r\n\r\n  let updateM= time.minutes, updateS=time.seconds  \r\n\r\n  useEffect(()=>{\r\n    dispatch(resetTimeAction())\r\n  },[])\r\n\r\n  useEffect(()=>{\r\n    if(!status.pause){\r\n      if(firstRun)dispatch(resetTimeAction())\r\n    }\r\n  },[timer.defaultTime])\r\n\r\n\r\n  useEffect(() => {\r\n    document.title=`${time.minutes>=10?time.minutes:'0'+time.minutes}:${time.seconds>=10?time.seconds:'0'+time.seconds}`\r\n }, [time]);\r\n\r\n\r\n\r\n const timerPauseSetting=()=>{\r\n  if((totalCount+1)%3===0){\r\n    dispatch(setLittlePauseAction({pause:!pause}))\r\n    dispatch(setTimeAction({value1:10,value2:25}))\r\n    dispatch(setTotalCountAction(1))    \r\n    return\r\n  }else\r\n    dispatch(setLittlePauseAction({pause:!pause}))\r\n    dispatch(setLittlePauseTimeAction())\r\n    dispatch(setTotalCountAction(1))\r\n    return\r\n }\r\n\r\n const defaultTimerSetting=()=>{\r\n  dispatch(resetTimeAction())\r\n  dispatch(setLittlePauseAction({pause:false}))\r\n  dispatch(setStatusAction({play:true}))\r\n }\r\n\r\n\r\n\r\n useEffect(() =>{\r\n  if(status.play){\r\n    if(firstRun) setFirstRun(false)\r\n    const intervalId = setInterval(()=>{\r\n      if(updateM===0&&updateS===1) {\r\n        dispatch(setStatusAction({play:!status.play}))\r\n        if(!pause){\r\n          timerPauseSetting()\r\n          return clearInterval(intervalId)\r\n          }else\r\n          defaultTimerSetting()\r\n          return clearInterval(intervalId)\r\n        }\r\n    if(updateS===0){\r\n      updateS=60\r\n      updateM--}\r\n    updateS--\r\n    dispatch(setTimeAction({value1:updateM,value2:updateS}))\r\n    },10);\r\n    return ()=>clearInterval(intervalId);\r\n   } return undefined;\r\n },[status.play,pause])\r\n\r\n  useEffect(()=>{\r\n    if(pause) dispatch(setStatusAction({play:true}))\r\n  },[pause])\r\n\r\n\r\n  return (\r\n    <div className={classes.timer} >\r\n  <div className={classes.span_wrapper}>\r\n    <span className={classes.span}>{time.minutes>=10?time.minutes:'0'+time.minutes}</span>\r\n    <span className={classes.span}>:</span>\r\n    <span className={classes.span}>{time.seconds>=10?time.seconds:'0'+time.seconds}</span>\r\n  </div>\r\n  \r\n  <div className={classes.img} >\r\n    <div className={classes.wrapper_img} style={{marginLeft:-(time.minutes*60+time.seconds)}}>\r\n    <img src={require('./icon/scale.png')} alt={1}></img>\r\n    </div>\r\n  </div>\r\n  <InputTimer status={status}/>\r\n  </div>\r\n  )};\r\n\r\nexport default Timer;\r\n"]},"metadata":{},"sourceType":"module"}