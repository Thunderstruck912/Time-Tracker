{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bouku\\\\Desktop\\\\Time Tracker\\\\time-tracker\\\\src\\\\components\\\\SkipRound\\\\SkipRound.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport classes from './SkipRound.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setTimeAction, resetTimeAction, resetLittlePauseTimeAction, resetLargePauseTimeAction } from '../../store/timeReducer';\nimport { setStatusAction, setLittlePauseAction } from '../../store/timerStatus';\nimport { setTotalCountAction } from '../../store/totalCountReducer';\nimport defaultTimerSetting from '../../utilites/timerSettings';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SkipRound = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const status = useSelector(state => state.status.littlePause);\n  const totalCount = useSelector(state => state.totalCount.totalCount);\n\n  const timerPauseSetting = () => {\n    if ((totalCount + 1) % 3 === 0) {\n      dispatch(setLittlePauseAction({\n        pause: !status.littlePause\n      }));\n      dispatch(resetLargePauseTimeAction());\n      dispatch(setTotalCountAction(1));\n      return;\n    } else dispatch(setLittlePauseAction({\n      pause: !status.littlePause\n    }));\n\n    dispatch(resetLittlePauseTimeAction());\n    dispatch(setTotalCountAction(1));\n    return;\n  }; // const defaultTimerSetting=()=>{\n  //   dispatch(resetTimeAction())\n  //   dispatch(setLittlePauseAction({pause:false}))\n  //   dispatch(setStatusAction({play:true}))\n  //  }\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.skip_wrapper,\n    children: status ? /*#__PURE__*/_jsxDEV(\"span\", {\n      onClick: defaultTimerSetting,\n      children: \"\\u041F\\u0440\\u043E\\u043F\\u0443\\u0441\\u0442\\u0438\\u0442\\u044C \\u043F\\u0435\\u0440\\u0435\\u0440\\u044B\\u0432\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n      onClick: timerPauseSetting,\n      children: \"\\u041F\\u0440\\u043E\\u043F\\u0443\\u0441\\u0442\\u0438\\u0442\\u044C \\u0440\\u0430\\u0443\\u043D\\u0434\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SkipRound, \"QZXoui/w/p+StmQCMUmxgjwKShQ=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = SkipRound;\nexport default SkipRound;\n\nvar _c;\n\n$RefreshReg$(_c, \"SkipRound\");","map":{"version":3,"sources":["C:/Users/bouku/Desktop/Time Tracker/time-tracker/src/components/SkipRound/SkipRound.jsx"],"names":["React","classes","useSelector","useDispatch","setTimeAction","resetTimeAction","resetLittlePauseTimeAction","resetLargePauseTimeAction","setStatusAction","setLittlePauseAction","setTotalCountAction","defaultTimerSetting","SkipRound","dispatch","status","state","littlePause","totalCount","timerPauseSetting","pause","skip_wrapper"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,SAAQC,WAAR,EAAoBC,WAApB,QAAsC,aAAtC;AACA,SAASC,aAAT,EAAwBC,eAAxB,EAAwCC,0BAAxC,EAAmEC,yBAAnE,QAAoG,yBAApG;AACA,SAAQC,eAAR,EAAwBC,oBAAxB,QAAmD,yBAAnD;AACA,SAAQC,mBAAR,QAAkC,+BAAlC;AACA,OAAOC,mBAAP,MAAgC,8BAAhC;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB,QAAMC,QAAQ,GAAEV,WAAW,EAA3B;AACA,QAAMW,MAAM,GAAEZ,WAAW,CAAEa,KAAD,IAASA,KAAK,CAACD,MAAN,CAAaE,WAAvB,CAAzB;AACA,QAAMC,UAAU,GAACf,WAAW,CAAEa,KAAD,IAASA,KAAK,CAACE,UAAN,CAAiBA,UAA3B,CAA5B;;AAEA,QAAMC,iBAAiB,GAAC,MAAI;AAC1B,QAAG,CAACD,UAAU,GAAC,CAAZ,IAAe,CAAf,KAAmB,CAAtB,EAAwB;AACtBJ,MAAAA,QAAQ,CAACJ,oBAAoB,CAAC;AAACU,QAAAA,KAAK,EAAC,CAACL,MAAM,CAACE;AAAf,OAAD,CAArB,CAAR;AACAH,MAAAA,QAAQ,CAACN,yBAAyB,EAA1B,CAAR;AACAM,MAAAA,QAAQ,CAACH,mBAAmB,CAAC,CAAD,CAApB,CAAR;AACA;AACD,KALD,MAMEG,QAAQ,CAACJ,oBAAoB,CAAC;AAACU,MAAAA,KAAK,EAAC,CAACL,MAAM,CAACE;AAAf,KAAD,CAArB,CAAR;;AACAH,IAAAA,QAAQ,CAACP,0BAA0B,EAA3B,CAAR;AACAO,IAAAA,QAAQ,CAACH,mBAAmB,CAAC,CAAD,CAApB,CAAR;AACA;AACF,GAXF,CALsB,CAkBtB;AACA;AACA;AACA;AACA;;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAET,OAAO,CAACmB,YAAxB;AAAA,cACGN,MAAM,gBACP;AAAM,MAAA,OAAO,EAAEH,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADO,gBAEP;AAAM,MAAA,OAAO,EAAEO,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CA/BD;;GAAMN,S;UACYT,W,EACFD,W,EACGA,W;;;KAHbU,S;AAiCN,eAAeA,SAAf","sourcesContent":["import React from 'react';\r\nimport classes from './SkipRound.module.css'\r\nimport {useSelector,useDispatch} from 'react-redux';\r\nimport { setTimeAction, resetTimeAction,resetLittlePauseTimeAction,resetLargePauseTimeAction } from '../../store/timeReducer';\r\nimport {setStatusAction,setLittlePauseAction} from '../../store/timerStatus'\r\nimport {setTotalCountAction} from '../../store/totalCountReducer'\r\nimport defaultTimerSetting from '../../utilites/timerSettings'\r\n\r\nconst SkipRound = () => {\r\n  const dispatch= useDispatch()\r\n  const status =useSelector((state)=>state.status.littlePause)\r\n  const totalCount=useSelector((state)=>state.totalCount.totalCount)\r\n\r\n  const timerPauseSetting=()=>{\r\n    if((totalCount+1)%3===0){\r\n      dispatch(setLittlePauseAction({pause:!status.littlePause}))\r\n      dispatch(resetLargePauseTimeAction())\r\n      dispatch(setTotalCountAction(1))    \r\n      return\r\n    }else\r\n      dispatch(setLittlePauseAction({pause:!status.littlePause}))\r\n      dispatch(resetLittlePauseTimeAction())\r\n      dispatch(setTotalCountAction(1))\r\n      return\r\n   }\r\n\r\n  // const defaultTimerSetting=()=>{\r\n  //   dispatch(resetTimeAction())\r\n  //   dispatch(setLittlePauseAction({pause:false}))\r\n  //   dispatch(setStatusAction({play:true}))\r\n  //  }\r\n\r\n  return (\r\n    <div className={classes.skip_wrapper}>\r\n      {status?\r\n      <span onClick={defaultTimerSetting}>Пропустить перерыв</span>:\r\n      <span onClick={timerPauseSetting}>Пропустить раунд</span>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SkipRound;\r\n"]},"metadata":{},"sourceType":"module"}