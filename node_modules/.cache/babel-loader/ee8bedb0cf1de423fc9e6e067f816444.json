{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bouku\\\\Desktop\\\\Time Tracker\\\\time-tracker\\\\src\\\\components\\\\main.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Main = () => {\n  _s();\n\n  const [time, setTime] = useState({\n    minutes: 0,\n    seconds: 0\n  });\n\n  const timer = () => {\n    run();\n    setInterval(run, 1000);\n  };\n\n  let updateMin = time.minutes,\n      updateSec = time.seconds;\n\n  const run = () => {\n    if (updateSec === 60) {\n      updateMin++;\n      updateSec = 0;\n    }\n\n    return setTime({\n      minutes: updateMin,\n      seconds: updateSec\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: () => console.log(time),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: time.minutes >= 10 ? time.minutes : '0' + time.minutes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }, this), \":\", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: time.seconds >= 10 ? time.seconds : '0' + time.seconds\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        onClick: timer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Main, \"9ygOBbiA9JLd9Uc13n72jfNqnd8=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["C:/Users/bouku/Desktop/Time Tracker/time-tracker/src/components/main.jsx"],"names":["React","useState","Main","time","setTime","minutes","seconds","timer","run","setInterval","updateMin","updateSec","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AAEjB,QAAK,CAACC,IAAD,EAAMC,OAAN,IAAeH,QAAQ,CAAC;AAACI,IAAAA,OAAO,EAAC,CAAT;AAAWC,IAAAA,OAAO,EAAC;AAAnB,GAAD,CAA5B;;AAGA,QAAMC,KAAK,GAAC,MAAI;AACdC,IAAAA,GAAG;AACHC,IAAAA,WAAW,CAACD,GAAD,EAAK,IAAL,CAAX;AACD,GAHD;;AAIA,MAAIE,SAAS,GAAEP,IAAI,CAACE,OAApB;AAAA,MAA6BM,SAAS,GAACR,IAAI,CAACG,OAA5C;;AACA,QAAME,GAAG,GAAG,MAAI;AAEd,QAAGG,SAAS,KAAG,EAAf,EAAkB;AAChBD,MAAAA,SAAS;AACTC,MAAAA,SAAS,GAAC,CAAV;AACD;;AACD,WAAOP,OAAO,CAAC;AAACC,MAAAA,OAAO,EAACK,SAAT;AAAmBJ,MAAAA,OAAO,EAACK;AAA3B,KAAD,CAAd;AACD,GAPD;;AAUA,sBAAO;AAAK,IAAA,OAAO,EAAE,MAAIC,OAAO,CAACC,GAAR,CAAYV,IAAZ,CAAlB;AAAA,4BAEL;AAAA,8BACE;AAAA,kBAAOA,IAAI,CAACE,OAAL,IAAc,EAAd,GAAiBF,IAAI,CAACE,OAAtB,GAA8B,MAAIF,IAAI,CAACE;AAA9C;AAAA;AAAA;AAAA;AAAA,cADF,oBAEE;AAAA,kBAAOF,IAAI,CAACG,OAAL,IAAc,EAAd,GAAiBH,IAAI,CAACG,OAAtB,GAA8B,MAAIH,IAAI,CAACG;AAA9C;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFK,eAOL;AAAA,6BACE;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,OAAO,EAAEC;AAA9B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAPK;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAWD,CA/BD;;GAAML,I;;KAAAA,I;AAiCN,eAAeA,IAAf","sourcesContent":["import React,{useState} from 'react';\r\n\r\nconst Main = () => {\r\n\r\n  const[time,setTime]=useState({minutes:0,seconds:0})\r\n  \r\n\r\n  const timer=()=>{\r\n    run();\r\n    setInterval(run,1000)\r\n  } \r\n  let updateMin= time.minutes, updateSec=time.seconds\r\n  const run = ()=>{\r\n\r\n    if(updateSec===60){\r\n      updateMin++;\r\n      updateSec=0\r\n    }\r\n    return setTime({minutes:updateMin,seconds:updateSec})\r\n  }\r\n\r\n\r\n  return <div onClick={()=>console.log(time)}>\r\n\r\n    <div>\r\n      <span>{time.minutes>=10?time.minutes:'0'+time.minutes}</span>:\r\n      <span>{time.seconds>=10?time.seconds:'0'+time.seconds}</span>\r\n    </div>\r\n\r\n    <div>\r\n      <input type=\"button\" onClick={timer}/>\r\n      </div>\r\n  </div>;\r\n};\r\n\r\nexport default Main;\r\n"]},"metadata":{},"sourceType":"module"}