{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bouku\\\\Desktop\\\\Time Tracker\\\\time-tracker\\\\src\\\\components\\\\TotalCount\\\\TotalCount.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { setTotalCountAction } from \"../../store/totalCountReducer\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport classes from \"./TotalCount.module.css\";\nimport { DATA } from \"../../utilites/date\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst statsName = \"DATA:STATISTICS\";\nconst {\n  dateNow\n} = DATA;\n\nconst TotalCount = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const count = useSelector(state => state.totalCount);\n  const status = useSelector(state => state.status);\n  const [stats, setStats] = useState(JSON.parse(localStorage.getItem(statsName)) || []);\n  useEffect(() => {\n    addStats();\n    if (stats && status.reloadStatus) localStorage.setItem(statsName, JSON.stringify(stats));\n  }, [count.totalCount]);\n  useEffect(() => {\n    if (JSON.parse(localStorage.getItem(statsName))) {\n      let statistics = JSON.parse(localStorage.getItem(statsName));\n      if (statistics.length >= 1) dispatch(setTotalCountAction(statistics[statistics.length - 1].count));\n\n      if (statistics[0].data !== statistics[statistics.length - 1].data) {\n        localStorage.removeItem(statsName);\n        dispatch(setTotalCountAction(0));\n      }\n    }\n  }, []);\n\n  const addStats = () => {\n    let newStats = {\n      data: dateNow(),\n      count: count.totalCount + 1\n    };\n    setStats([...stats, newStats]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.count_wrapper,\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: classes.count,\n      children: count.totalCount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"\\u0438\\u0437\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: count.defaultCount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"\\u043F\\u043E\\u043C\\u0438\\u0434\\u043E\\u0440\\u043E\\u043A\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 4\n    }, this), count.totalCount >= count.defaultCount ? /*#__PURE__*/_jsxDEV(\"span\", {\n      className: classes.congrat,\n      children: \"- \\u0414\\u0435\\u043D\\u044C \\u043F\\u0440\\u043E\\u0436\\u0438\\u0442 \\u043D\\u0435 \\u0437\\u0440\\u044F!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }, this) : /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 3\n  }, this);\n};\n\n_s(TotalCount, \"awxIxwff8CRu9oTTs4H9EAdSkAg=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = TotalCount;\nexport default TotalCount;\n\nvar _c;\n\n$RefreshReg$(_c, \"TotalCount\");","map":{"version":3,"sources":["C:/Users/bouku/Desktop/Time Tracker/time-tracker/src/components/TotalCount/TotalCount.jsx"],"names":["React","useState","useEffect","setTotalCountAction","useSelector","useDispatch","classes","DATA","statsName","dateNow","TotalCount","dispatch","count","state","totalCount","status","stats","setStats","JSON","parse","localStorage","getItem","addStats","reloadStatus","setItem","stringify","statistics","length","data","removeItem","newStats","count_wrapper","defaultCount","congrat"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\r\nimport {setTotalCountAction} from \"../../store/totalCountReducer\";\r\nimport {useSelector, useDispatch} from \"react-redux\";\r\nimport classes from \"./TotalCount.module.css\";\r\nimport {DATA} from \"../../utilites/date\";\r\n\r\nconst statsName = \"DATA:STATISTICS\";\r\nconst {dateNow} = DATA;\r\n\r\nconst TotalCount = () => {\r\n\tconst dispatch = useDispatch();\r\n\tconst count = useSelector((state) => state.totalCount);\r\n\tconst status = useSelector((state) => state.status);\r\n\tconst [stats, setStats] = useState(\r\n\t\tJSON.parse(localStorage.getItem(statsName)) || [],\r\n\t);\r\n\r\n\tuseEffect(() => {\r\n\t\taddStats();\r\n\t\tif (stats && status.reloadStatus)\r\n\t\t\tlocalStorage.setItem(statsName, JSON.stringify(stats));\r\n\t}, [count.totalCount]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (JSON.parse(localStorage.getItem(statsName))) {\r\n\t\t\tlet statistics = JSON.parse(localStorage.getItem(statsName));\r\n\t\t\tif (statistics.length >= 1)\r\n\t\t\t\tdispatch(setTotalCountAction(statistics[statistics.length - 1].count));\r\n\t\t\tif (statistics[0].data !== statistics[statistics.length - 1].data) {\r\n\t\t\t\tlocalStorage.removeItem(statsName);\r\n\t\t\t\tdispatch(setTotalCountAction(0));\r\n\t\t\t}\r\n\t\t}\r\n\t}, []);\r\n\r\n\tconst addStats = () => {\r\n\t\tlet newStats = {data: dateNow(), count: count.totalCount + 1};\r\n\t\tsetStats([...stats, newStats]);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className={classes.count_wrapper}>\r\n\t\t\t<span className={classes.count}>{count.totalCount}</span>\r\n\t\t\t<span>из</span>\r\n\t\t\t<span>{count.defaultCount}</span>\r\n\t\t\t<span>помидорок</span>\r\n\t\t\t{count.totalCount >= count.defaultCount ? (\r\n\t\t\t\t<span className={classes.congrat}>- День прожит не зря!</span>\r\n\t\t\t) : (\r\n\t\t\t\t<span></span>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default TotalCount;\r\n"]},"metadata":{},"sourceType":"module"}