{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bouku\\\\Desktop\\\\Time Tracker\\\\time-tracker\\\\src\\\\components\\\\NavContentSetting\\\\NavSettingTimer\\\\defaultTimeSetting.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport classes from './style/navSetting.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addDefaultTimeAction, deleteDefaultTimeAction, setDefaultTimeAction } from '../../../store/timeReducer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DefaultTimeSetting = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const time = useSelector(state => state.time.defaultTime);\n  useEffect(() => {\n    if (localStorage.getItem('defaultTime')) dispatch(setDefaultTimeAction(localStorage.getItem('defaultTime')));\n  }, []);\n  useEffect(() => {\n    localStorage.setItem('defaultTime', time.minutes);\n  }, [time.minutes]);\n\n  const addDefaultTime = () => {\n    if (time.minutes < 55) dispatch(addDefaultTimeAction(1));\n  };\n\n  const removeDefaultTime = () => {\n    if (time.minutes > 10) dispatch(deleteDefaultTimeAction(1));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.timer_setting,\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: props.tittle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.input_wrapper,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: classes.minus,\n        onClick: removeDefaultTime,\n        children: \"-\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: classes.input_time,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: time.minutes,\n          onChange: e => e.preventDefault,\n          className: classes.input,\n          \"data-type\": \"number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 7\n        }, this), ' мин']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: classes.plus,\n        onClick: addDefaultTime,\n        children: \" +\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 3\n  }, this);\n};\n\n_s(DefaultTimeSetting, \"4QlKc3Hfe/rQi7H8wv+xDrx7cNM=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = DefaultTimeSetting;\nexport default DefaultTimeSetting;\n\nvar _c;\n\n$RefreshReg$(_c, \"DefaultTimeSetting\");","map":{"version":3,"sources":["C:/Users/bouku/Desktop/Time Tracker/time-tracker/src/components/NavContentSetting/NavSettingTimer/defaultTimeSetting.jsx"],"names":["React","useEffect","classes","useSelector","useDispatch","addDefaultTimeAction","deleteDefaultTimeAction","setDefaultTimeAction","DefaultTimeSetting","props","dispatch","time","state","defaultTime","localStorage","getItem","setItem","minutes","addDefaultTime","removeDefaultTime","timer_setting","tittle","input_wrapper","minus","input_time","e","preventDefault","input","plus"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,OAAOC,OAAP,MAAoB,+BAApB;AACA,SAAQC,WAAR,EAAoBC,WAApB,QAAsC,aAAtC;AACA,SAAQC,oBAAR,EAA6BC,uBAA7B,EAAqDC,oBAArD,QAAgF,4BAAhF;;;AAEA,MAAMC,kBAAkB,GAAIC,KAAD,IAAW;AAAA;;AACpC,QAAMC,QAAQ,GAAEN,WAAW,EAA3B;AACA,QAAMO,IAAI,GAACR,WAAW,CAAES,KAAD,IAASA,KAAK,CAACD,IAAN,CAAWE,WAArB,CAAtB;AAEAZ,EAAAA,SAAS,CAAC,MAAI;AACZ,QAAGa,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAH,EAAwCL,QAAQ,CAACH,oBAAoB,CAACO,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAD,CAArB,CAAR;AACzC,GAFQ,EAEP,EAFO,CAAT;AAIAd,EAAAA,SAAS,CAAC,MAAI;AACZa,IAAAA,YAAY,CAACE,OAAb,CAAqB,aAArB,EAAmCL,IAAI,CAACM,OAAxC;AACD,GAFQ,EAEP,CAACN,IAAI,CAACM,OAAN,CAFO,CAAT;;AAIA,QAAMC,cAAc,GAAC,MAAI;AACvB,QAAGP,IAAI,CAACM,OAAL,GAAa,EAAhB,EAAqBP,QAAQ,CAACL,oBAAoB,CAAC,CAAD,CAArB,CAAR;AACtB,GAFD;;AAIA,QAAMc,iBAAiB,GAAC,MAAK;AAC3B,QAAGR,IAAI,CAACM,OAAL,GAAa,EAAhB,EAAoBP,QAAQ,CAACJ,uBAAuB,CAAC,CAAD,CAAxB,CAAR;AACrB,GAFD;;AAIA,sBACA;AAAK,IAAA,SAAS,EAAEJ,OAAO,CAACkB,aAAxB;AAAA,4BACE;AAAA,gBAAOX,KAAK,CAACY;AAAb;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAEnB,OAAO,CAACoB,aAAxB;AAAA,8BACE;AAAM,QAAA,SAAS,EAAEpB,OAAO,CAACqB,KAAzB;AAAgC,QAAA,OAAO,EAAEJ,iBAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAM,QAAA,SAAS,EAAEjB,OAAO,CAACsB,UAAzB;AAAA,gCACA;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,KAAK,EAAEb,IAAI,CAACM,OAA/B;AAAwC,UAAA,QAAQ,EAAGQ,CAAD,IAAKA,CAAC,CAACC,cAAzD;AAAyE,UAAA,SAAS,EAAExB,OAAO,CAACyB,KAA5F;AAAmG,uBAAU;AAA7G;AAAA;AAAA;AAAA;AAAA,gBADA,EACwH,MADxH;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAKE;AAAM,QAAA,SAAS,EAAEzB,OAAO,CAAC0B,IAAzB;AAA+B,QAAA,OAAO,EAAEV,cAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAYD,CAhCD;;GAAMV,kB;UACYJ,W,EACLD,W;;;KAFPK,kB;AAkCN,eAAeA,kBAAf","sourcesContent":["import React,{useEffect} from 'react';\r\nimport classes from './style/navSetting.module.css'\r\nimport {useSelector,useDispatch} from 'react-redux';\r\nimport {addDefaultTimeAction,deleteDefaultTimeAction,setDefaultTimeAction} from '../../../store/timeReducer'\r\n\r\nconst DefaultTimeSetting = (props) => {\r\n  const dispatch= useDispatch()\r\n  const time=useSelector((state)=>state.time.defaultTime)\r\n\r\n  useEffect(()=>{\r\n    if(localStorage.getItem('defaultTime')) dispatch(setDefaultTimeAction(localStorage.getItem('defaultTime')))\r\n  },[])\r\n\r\n  useEffect(()=>{\r\n    localStorage.setItem('defaultTime',time.minutes)\r\n  },[time.minutes])\r\n\r\n  const addDefaultTime=()=>{\r\n    if(time.minutes<55)  dispatch(addDefaultTimeAction(1))\r\n  }\r\n\r\n  const removeDefaultTime=()=> {\r\n    if(time.minutes>10) dispatch(deleteDefaultTimeAction(1))\r\n  }\r\n\r\n  return (\r\n  <div className={classes.timer_setting}>\r\n    <span>{props.tittle}</span>\r\n    <div className={classes.input_wrapper}>\r\n      <span className={classes.minus} onClick={removeDefaultTime}>-</span>\r\n      <span className={classes.input_time}>\r\n      <input type='text' value={time.minutes} onChange={(e)=>e.preventDefault} className={classes.input} data-type='number'/>{' мин'}\r\n      </span>\r\n      <span className={classes.plus} onClick={addDefaultTime}> +</span>\r\n    </div>\r\n  </div>\r\n  )\r\n};\r\n\r\nexport default DefaultTimeSetting;\r\n              "]},"metadata":{},"sourceType":"module"}