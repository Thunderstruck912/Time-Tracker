{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bouku\\\\Desktop\\\\Time Tracker\\\\time-tracker\\\\src\\\\components\\\\NavContentSetting\\\\NavSettingTimer\\\\defaultSoundSetting.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setSoundStatusAction } from '../../../store/timerStatus';\nimport { useLocalStorage } from '../../../hooks/useLocalStorage';\nimport RadioInputSetting from '../../../UI/RadioInputSetting/RadioInputSetting';\nimport useSound from 'use-sound';\nimport swipeSound from './sound/bell.mp3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DefaultSoundSetting = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const status = useSelector(state => state.status);\n\n  const swipeInput = () => dispatch(setSoundStatusAction(!status.sound));\n\n  useLocalStorage('SETTING:SOUND_STATUS', status.sound, setSoundStatusAction);\n  const [playActive] = useSound(swipeSound, {\n    soundEnabled: status.sound,\n    volume: 0.4\n  });\n  useEffect(() => {\n    playActive();\n  }, [status.littlePause]);\n  return /*#__PURE__*/_jsxDEV(RadioInputSetting, {\n    tittle: props.tittle,\n    swipe: swipeInput,\n    status: status.sound,\n    value_on: 'Вкл',\n    value_off: 'Выкл'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DefaultSoundSetting, \"PdjVFCLRZLQZDE+uPMgffx5eSlo=\", false, function () {\n  return [useDispatch, useSelector, useLocalStorage, useSound];\n});\n\n_c = DefaultSoundSetting;\nexport default DefaultSoundSetting;\n\nvar _c;\n\n$RefreshReg$(_c, \"DefaultSoundSetting\");","map":{"version":3,"sources":["C:/Users/bouku/Desktop/Time Tracker/time-tracker/src/components/NavContentSetting/NavSettingTimer/defaultSoundSetting.jsx"],"names":["React","useEffect","useSelector","useDispatch","setSoundStatusAction","useLocalStorage","RadioInputSetting","useSound","swipeSound","DefaultSoundSetting","props","dispatch","status","state","swipeInput","sound","playActive","soundEnabled","volume","littlePause","tittle"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,SAAQC,WAAR,EAAoBC,WAApB,QAAsC,aAAtC;AACA,SAAQC,oBAAR,QAAmC,4BAAnC;AACA,SAAQC,eAAR,QAA8B,gCAA9B;AACA,OAAOC,iBAAP,MAA8B,iDAA9B;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;;;AAEA,MAAMC,mBAAmB,GAAIC,KAAD,IAAW;AAAA;;AACrC,QAAMC,QAAQ,GAAER,WAAW,EAA3B;AACA,QAAMS,MAAM,GAACV,WAAW,CAAEW,KAAD,IAASA,KAAK,CAACD,MAAhB,CAAxB;;AACA,QAAME,UAAU,GAAE,MAAIH,QAAQ,CAACP,oBAAoB,CAAC,CAACQ,MAAM,CAACG,KAAT,CAArB,CAA9B;;AAEAV,EAAAA,eAAe,CAAC,sBAAD,EAAyBO,MAAM,CAACG,KAAhC,EAAsCX,oBAAtC,CAAf;AAEE,QAAM,CAACY,UAAD,IAAeT,QAAQ,CACzBC,UADyB,EAEzB;AAAES,IAAAA,YAAY,EAAEL,MAAM,CAACG,KAAvB;AAA8BG,IAAAA,MAAM,EAAE;AAAtC,GAFyB,CAA7B;AAIEjB,EAAAA,SAAS,CAAC,MAAI;AACZe,IAAAA,UAAU;AACX,GAFQ,EAEP,CAACJ,MAAM,CAACO,WAAR,CAFO,CAAT;AAIJ,sBACE,QAAC,iBAAD;AACE,IAAA,MAAM,EAAET,KAAK,CAACU,MADhB;AAEE,IAAA,KAAK,EAAEN,UAFT;AAGE,IAAA,MAAM,EAAEF,MAAM,CAACG,KAHjB;AAIE,IAAA,QAAQ,EAAE,KAJZ;AAKE,IAAA,SAAS,EAAE;AALb;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAxBD;;GAAMN,mB;UACYN,W,EACHD,W,EAGbG,e,EAEuBE,Q;;;KAPnBE,mB;AA0BN,eAAeA,mBAAf","sourcesContent":["import React,{useEffect} from 'react';\r\nimport {useSelector,useDispatch} from 'react-redux';\r\nimport {setSoundStatusAction} from '../../../store/timerStatus'\r\nimport {useLocalStorage} from '../../../hooks/useLocalStorage'\r\nimport RadioInputSetting from '../../../UI/RadioInputSetting/RadioInputSetting';\r\nimport useSound from 'use-sound';\r\nimport swipeSound from './sound/bell.mp3'\r\n\r\nconst DefaultSoundSetting = (props) => {\r\n  const dispatch= useDispatch()\r\n  const status=useSelector((state)=>state.status)\r\n  const swipeInput =()=>dispatch(setSoundStatusAction(!status.sound))\r\n\r\n  useLocalStorage('SETTING:SOUND_STATUS', status.sound,setSoundStatusAction)\r\n\r\n    const [playActive] = useSound(\r\n        swipeSound,\r\n        { soundEnabled: status.sound, volume: 0.4 })\r\n\r\n      useEffect(()=>{\r\n        playActive()\r\n      },[status.littlePause])\r\n\r\n  return (\r\n    <RadioInputSetting\r\n      tittle={props.tittle}\r\n      swipe={swipeInput} \r\n      status={status.sound}\r\n      value_on={'Вкл'}\r\n      value_off={'Выкл'}\r\n      />\r\n  );\r\n};\r\n\r\nexport default DefaultSoundSetting;\r\n"]},"metadata":{},"sourceType":"module"}