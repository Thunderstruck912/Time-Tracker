{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bouku\\\\Desktop\\\\Time Tracker\\\\time-tracker\\\\src\\\\components\\\\Timer\\\\Timer.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setTimeAction } from '../../store/timeReducer';\nimport { setStatusAction } from '../../store/timerStatus';\nimport { classes } from '../Timer/Timer.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Timer = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const time = useSelector(state => state.time); // const status=useSelector((state)=>state.status)\n\n  const [interv, setInterv] = useState(null);\n  const [play, setPlay] = useState(false);\n  let updateM = time.minutes,\n      updateS = time.seconds;\n\n  const timer = () => {\n    setPlay(!play);\n\n    if (!play) {\n      setTracer();\n      setInterv(setInterval(setTracer, 1));\n      clearInterval(interv);\n    } else {\n      clearInterval(interv);\n    }\n  };\n\n  const clear = () => {\n    clearInterval(interv);\n    setPlay(false);\n  };\n\n  const setTracer = () => {\n    if (updateM === 0 && updateS === 1) {\n      dispatch(setTimeAction({\n        value1: 25,\n        value2: 0\n      }));\n      clear();\n      return;\n    }\n\n    if (updateS === 0) {\n      updateS = 60;\n      updateM--;\n    }\n\n    updateS--;\n    dispatch(setTimeAction({\n      value1: updateM,\n      value2: updateS\n    }));\n    return;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: time.minutes >= 10 ? time.minutes : '0' + time.minutes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 5\n      }, this), \":\", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: time.seconds >= 10 ? time.seconds : '0' + time.seconds\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 3\n    }, this), !play ? /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      onClick: timer,\n      value: \"\\u0437\\u0430\\u043F\\u0443\\u0441\\u0442\\u0438\\u0442\\u044C \\u0442\\u0430\\u0439\\u043C\\u0435\\u0440\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 10\n    }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      onClick: clear,\n      value: \"\\u043E\\u0441\\u0442\\u0430\\u043D\\u043E\\u0432\\u0438\\u0442\\u044C \\u0442\\u0430\\u0439\\u043C\\u0435\\u0440\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Timer, \"KnsDpPxO2P0YGlCBdEQhHbahGLI=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Timer;\nexport default Timer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"sources":["C:/Users/bouku/Desktop/Time Tracker/time-tracker/src/components/Timer/Timer.jsx"],"names":["React","useState","useEffect","useSelector","useDispatch","setTimeAction","setStatusAction","classes","Timer","dispatch","time","state","interv","setInterv","play","setPlay","updateM","minutes","updateS","seconds","timer","setTracer","setInterval","clearInterval","clear","value1","value2"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,SAAQC,WAAR,EAAoBC,WAApB,QAAsC,aAAtC;AACA,SAASC,aAAT,QAA8B,yBAA9B;AACA,SAAQC,eAAR,QAA8B,yBAA9B;AAEA,SAAQC,OAAR,QAAsB,2BAAtB;;;;AAGA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAClB,QAAMC,QAAQ,GAACL,WAAW,EAA1B;AACA,QAAMM,IAAI,GAACP,WAAW,CAAEQ,KAAD,IAASA,KAAK,CAACD,IAAhB,CAAtB,CAFkB,CAGlB;;AACA,QAAM,CAACE,MAAD,EAAQC,SAAR,IAAmBZ,QAAQ,CAAC,IAAD,CAAjC;AAGA,QAAM,CAACa,IAAD,EAAMC,OAAN,IAAed,QAAQ,CAAC,KAAD,CAA7B;AAEA,MAAIe,OAAO,GAAEN,IAAI,CAACO,OAAlB;AAAA,MAA2BC,OAAO,GAACR,IAAI,CAACS,OAAxC;;AAGA,QAAMC,KAAK,GAAG,MAAM;AAClBL,IAAAA,OAAO,CAAC,CAACD,IAAF,CAAP;;AACA,QAAG,CAACA,IAAJ,EAAS;AACPO,MAAAA,SAAS;AACTR,MAAAA,SAAS,CAACS,WAAW,CAACD,SAAD,EAAW,CAAX,CAAZ,CAAT;AACAE,MAAAA,aAAa,CAACX,MAAD,CAAb;AACD,KAJD,MAIO;AACLW,MAAAA,aAAa,CAACX,MAAD,CAAb;AACD;AACF,GATD;;AAWD,QAAMY,KAAK,GAAG,MAAM;AAClBD,IAAAA,aAAa,CAACX,MAAD,CAAb;AACAG,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD,GAHD;;AAKC,QAAMM,SAAS,GAAC,MAAI;AAClB,QAAGL,OAAO,KAAG,CAAV,IAAaE,OAAO,KAAG,CAA1B,EAA6B;AAC5BT,MAAAA,QAAQ,CAACJ,aAAa,CAAC;AAACoB,QAAAA,MAAM,EAAC,EAAR;AAAWC,QAAAA,MAAM,EAAC;AAAlB,OAAD,CAAd,CAAR;AACCF,MAAAA,KAAK;AACN;AACA;;AACD,QAAGN,OAAO,KAAG,CAAb,EAAe;AACbA,MAAAA,OAAO,GAAC,EAAR;AACAF,MAAAA,OAAO;AAAG;;AACZE,IAAAA,OAAO;AACPT,IAAAA,QAAQ,CAACJ,aAAa,CAAC;AAACoB,MAAAA,MAAM,EAACT,OAAR;AAAgBU,MAAAA,MAAM,EAACR;AAAvB,KAAD,CAAd,CAAR;AACA;AACD,GAZD;;AAiBA,sBACE;AAAA,4BACF;AAAA,8BACE;AAAA,kBAAOR,IAAI,CAACO,OAAL,IAAc,EAAd,GAAiBP,IAAI,CAACO,OAAtB,GAA8B,MAAIP,IAAI,CAACO;AAA9C;AAAA;AAAA;AAAA;AAAA,cADF,oBAEE;AAAA,kBAAOP,IAAI,CAACS,OAAL,IAAc,EAAd,GAAiBT,IAAI,CAACS,OAAtB,GAA8B,MAAIT,IAAI,CAACS;AAA9C;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADE,EAKD,CAACL,IAAD,gBAAM;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,OAAO,EAAEM,KAA9B;AAAsC,MAAA,KAAK,EAAC;AAA5C;AAAA;AAAA;AAAA;AAAA,YAAN,gBACD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,OAAO,EAAEI,KAA9B;AAAsC,MAAA,KAAK,EAAC;AAA5C;AAAA;AAAA;AAAA;AAAA,YANE;AAAA,kBADF;AAWE,CAxDJ;;GAAMhB,K;UACWJ,W,EACJD,W;;;KAFPK,K;AA0DN,eAAeA,KAAf","sourcesContent":["import React,{useState,useEffect} from 'react';\r\nimport {useSelector,useDispatch} from 'react-redux';\r\nimport { setTimeAction } from '../../store/timeReducer';\r\nimport {setStatusAction} from '../../store/timerStatus'\r\n\r\nimport {classes} from '../Timer/Timer.module.css'\r\n\r\n\r\nconst Timer = () => {\r\n  const dispatch=useDispatch()\r\n  const time=useSelector((state)=>state.time)\r\n  // const status=useSelector((state)=>state.status)\r\n  const [interv,setInterv]=useState(null)\r\n\r\n\r\n  const [play,setPlay]=useState(false)\r\n\r\n  let updateM= time.minutes, updateS=time.seconds  \r\n \r\n\r\n  const timer = () => {\r\n    setPlay(!play)\r\n    if(!play){\r\n      setTracer()\r\n      setInterv(setInterval(setTracer,1))\r\n      clearInterval(interv)\r\n    } else {\r\n      clearInterval(interv)\r\n    }\r\n  }\r\n  \r\n const clear = () => {\r\n   clearInterval(interv)\r\n   setPlay(false)\r\n }\r\n\r\n  const setTracer=()=>{\r\n    if(updateM===0&&updateS===1) {\r\n     dispatch(setTimeAction({value1:25,value2:0}))\r\n      clear()\r\n     return\r\n    }\r\n    if(updateS===0){\r\n      updateS=60\r\n      updateM--}\r\n    updateS--\r\n    dispatch(setTimeAction({value1:updateM,value2:updateS}))\r\n    return \r\n  }\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n  <div>\r\n    <span>{time.minutes>=10?time.minutes:'0'+time.minutes}</span>:\r\n    <span>{time.seconds>=10?time.seconds:'0'+time.seconds}</span>\r\n  </div>\r\n  {!play?<input type=\"button\" onClick={timer}  value='запустить таймер'/>:\r\n  <input type=\"button\" onClick={clear}  value='остановить таймер'/>}\r\n  {/* <input type=\"button\" onClick={timer}  value='запустить таймер'/>\r\n  <input type=\"button\" onClick={clear}  value='остановить таймер'/> */}\r\n  </>\r\n  )};\r\n\r\nexport default Timer;\r\n"]},"metadata":{},"sourceType":"module"}