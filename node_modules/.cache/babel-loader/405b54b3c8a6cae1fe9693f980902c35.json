{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bouku\\\\Desktop\\\\Time Tracker\\\\time-tracker\\\\src\\\\components\\\\main.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst date = new Date(150000);\nconst minutes = date.getMinutes() < 10 ? '0' + date.getMinutes() : date.getMinutes();\nconsole.log(minutes);\n\nconst Main = () => {\n  _s();\n\n  const [time, setTime] = useState({\n    minutes: 25,\n    seconds: 0\n  });\n  const [pause, setPause] = useState({\n    minutes: 0,\n    seconds: 30\n  });\n  const [active, setActive] = useState(false);\n  const [interv, setInterv] = useState();\n  const [totalCount, setTotalCount] = useState(0);\n  const [alltime, setAllTime] = useState(0);\n\n  const getTime = () => {\n    setAllTime(totalCount * 25);\n  };\n\n  let updateMin = time.minutes,\n      updateSec = time.seconds;\n\n  const timer = () => {\n    setActive(!active);\n\n    if (!active) {\n      run();\n      setInterv(setInterval(run, 1));\n      clearInterval(interv);\n    } else {\n      clearInterval(interv);\n    }\n  };\n\n  const run = () => {\n    if (updateMin === 0 && updateSec === 1) {\n      setTotalCount(totalCount + 1);\n      setTime(pause);\n      setActive(false);\n      getTime();\n      return;\n    }\n\n    if (updateSec === 0) {\n      updateSec = 60;\n      updateMin--;\n    }\n\n    updateSec--;\n    return setTime({\n      minutes: updateMin,\n      seconds: updateSec\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: time.minutes >= 10 ? time.minutes : '0' + time.minutes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }, this), \":\", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: time.seconds >= 10 ? time.seconds : '0' + time.seconds\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        onClick: timer,\n        value: \"\\u0437\\u0430\\u043F\\u0443\\u0441\\u0442\\u0438\\u0442\\u044C \\u0442\\u0430\\u0439\\u043C\\u0435\\u0440\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"\\u041A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E \\u043F\\u043E\\u043C\\u0438\\u0434\\u043E\\u0440\\u043E\\u043A: \", totalCount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Main, \"Zbh+T95gvieizwVY+ROhWQ63lyo=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["C:/Users/bouku/Desktop/Time Tracker/time-tracker/src/components/main.jsx"],"names":["React","useState","useEffect","date","Date","minutes","getMinutes","console","log","Main","time","setTime","seconds","pause","setPause","active","setActive","interv","setInterv","totalCount","setTotalCount","alltime","setAllTime","getTime","updateMin","updateSec","timer","run","setInterval","clearInterval"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;;AAOA,MAAMC,IAAI,GAAG,IAAIC,IAAJ,CAAS,MAAT,CAAb;AACA,MAAMC,OAAO,GAAGF,IAAI,CAACG,UAAL,KAAkB,EAAlB,GAAsB,MAAIH,IAAI,CAACG,UAAL,EAA1B,GAA4CH,IAAI,CAACG,UAAL,EAA5D;AACAC,OAAO,CAACC,GAAR,CAAYH,OAAZ;;AAIA,MAAMI,IAAI,GAAG,MAAM;AAAA;;AAEjB,QAAK,CAACC,IAAD,EAAMC,OAAN,IAAeV,QAAQ,CAAC;AAACI,IAAAA,OAAO,EAAC,EAAT;AAAaO,IAAAA,OAAO,EAAC;AAArB,GAAD,CAA5B;AACA,QAAK,CAACC,KAAD,EAAOC,QAAP,IAAmBb,QAAQ,CAAC;AAACI,IAAAA,OAAO,EAAC,CAAT;AAAYO,IAAAA,OAAO,EAAC;AAApB,GAAD,CAAhC;AAEA,QAAK,CAACG,MAAD,EAAQC,SAAR,IAAmBf,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAACgB,MAAD,EAAQC,SAAR,IAAmBjB,QAAQ,EAAjC;AAEA,QAAM,CAACkB,UAAD,EAAYC,aAAZ,IAA2BnB,QAAQ,CAAC,CAAD,CAAzC;AACA,QAAM,CAACoB,OAAD,EAASC,UAAT,IAAqBrB,QAAQ,CAAC,CAAD,CAAnC;;AAEA,QAAMsB,OAAO,GAAE,MAAI;AACjBD,IAAAA,UAAU,CAACH,UAAU,GAAC,EAAZ,CAAV;AACD,GAFD;;AAOA,MAAIK,SAAS,GAAEd,IAAI,CAACL,OAApB;AAAA,MAA6BoB,SAAS,GAACf,IAAI,CAACE,OAA5C;;AAKA,QAAMc,KAAK,GAAC,MAAI;AACdV,IAAAA,SAAS,CAAC,CAACD,MAAF,CAAT;;AACA,QAAG,CAACA,MAAJ,EAAW;AACTY,MAAAA,GAAG;AACHT,MAAAA,SAAS,CAACU,WAAW,CAACD,GAAD,EAAK,CAAL,CAAZ,CAAT;AACAE,MAAAA,aAAa,CAACZ,MAAD,CAAb;AACD,KAJD,MAIO;AACLY,MAAAA,aAAa,CAACZ,MAAD,CAAb;AACD;AACF,GATD;;AAWA,QAAMU,GAAG,GAAG,MAAI;AACd,QAAGH,SAAS,KAAG,CAAZ,IAAeC,SAAS,KAAG,CAA9B,EAAiC;AAC/BL,MAAAA,aAAa,CAACD,UAAU,GAAC,CAAZ,CAAb;AACAR,MAAAA,OAAO,CAACE,KAAD,CAAP;AACAG,MAAAA,SAAS,CAAC,KAAD,CAAT;AACAO,MAAAA,OAAO;AACP;AACD;;AACD,QAAGE,SAAS,KAAG,CAAf,EAAiB;AACfA,MAAAA,SAAS,GAAC,EAAV;AACAD,MAAAA,SAAS;AACV;;AACDC,IAAAA,SAAS;AACT,WAAOd,OAAO,CAAC;AAACN,MAAAA,OAAO,EAACmB,SAAT;AAAmBZ,MAAAA,OAAO,EAACa;AAA3B,KAAD,CAAd;AACD,GAdD;;AAiBA,sBAAO;AAAA,4BAEL;AAAA,8BACE;AAAA,kBAAOf,IAAI,CAACL,OAAL,IAAc,EAAd,GAAiBK,IAAI,CAACL,OAAtB,GAA8B,MAAIK,IAAI,CAACL;AAA9C;AAAA;AAAA;AAAA;AAAA,cADF,oBAEE;AAAA,kBAAOK,IAAI,CAACE,OAAL,IAAc,EAAd,GAAiBF,IAAI,CAACE,OAAtB,GAA8B,MAAIF,IAAI,CAACE;AAA9C;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFK,eAOL;AAAA,8BACE;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,OAAO,EAAEc,KAA9B;AAAqC,QAAA,KAAK,EAAC;AAA3C;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,4IAA4BP,UAA5B;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAPK;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAYD,CA/DD;;GAAMV,I;;KAAAA,I;AAiEN,eAAeA,IAAf","sourcesContent":["import React,{useState,useEffect} from 'react';\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst date = new Date(150000)\r\nconst minutes = date.getMinutes()<10? '0'+date.getMinutes():date.getMinutes()\r\nconsole.log(minutes)\r\n\r\n\r\n\r\nconst Main = () => {\r\n\r\n  const[time,setTime]=useState({minutes:25 ,seconds:0})\r\n  const[pause,setPause] = useState({minutes:0 ,seconds:30})\r\n\r\n  const[active,setActive]=useState(false)\r\n  const [interv,setInterv]=useState()\r\n\r\n  const [totalCount,setTotalCount]=useState(0)\r\n  const [alltime,setAllTime]=useState(0)\r\n\r\n  const getTime= ()=>{\r\n    setAllTime(totalCount*25)\r\n  }\r\n\r\n  \r\n\r\n\r\n  let updateMin= time.minutes, updateSec=time.seconds  \r\n\r\n\r\n\r\n\r\n  const timer=()=>{\r\n    setActive(!active)\r\n    if(!active){\r\n      run()\r\n      setInterv(setInterval(run,1))\r\n      clearInterval(interv)\r\n    } else {\r\n      clearInterval(interv)\r\n    }\r\n  } \r\n\r\n  const run = ()=>{\r\n    if(updateMin===0&&updateSec===1) {\r\n      setTotalCount(totalCount+1)\r\n      setTime(pause)\r\n      setActive(false)\r\n      getTime()\r\n      return        \r\n    } \r\n    if(updateSec===0){\r\n      updateSec=60\r\n      updateMin--;\r\n    }\r\n    updateSec--\r\n    return setTime({minutes:updateMin,seconds:updateSec})\r\n  }\r\n\r\n\r\n  return <div>\r\n\r\n    <div>\r\n      <span>{time.minutes>=10?time.minutes:'0'+time.minutes}</span>:\r\n      <span>{time.seconds>=10?time.seconds:'0'+time.seconds}</span>\r\n    </div>\r\n\r\n    <div>\r\n      <input type=\"button\" onClick={timer} value='запустить таймер'/>\r\n      <div>Количество помидорок: {totalCount}</div>\r\n      </div>\r\n  </div>;\r\n};\r\n\r\nexport default Main;\r\n"]},"metadata":{},"sourceType":"module"}