{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bouku\\\\Desktop\\\\Time Tracker\\\\time-tracker\\\\src\\\\components\\\\Timer\\\\Timer.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setTotalCountAction } from '../../store/totalCountReducer';\nimport { setTimeAction, resetTimeAction } from '../../store/timeReducer';\nimport { setStatusAction, setLittlePauseAction } from '../../store/timerStatus';\nimport { defaultTimerSetting, timerPauseSetting } from '../../utilites/timerSettings';\nimport { useLocalStorage } from '../../hooks/useLocalStorage';\nimport InputTimer from '../../UI/InputTimer/InputTimer';\nimport classes from '../Timer/Timer.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Timer = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const timer = useSelector(state => state.time.timer);\n  const status = useSelector(state => state.status);\n  const totalCount = useSelector(state => state.totalCount.totalCount);\n  const [firstRun, setFirstRun] = useState(localStorage.getItem('firstRun') || true);\n  useLocalStorage('SETTING:LITTLE_PAUSE_STATUS', status.littlePause, setLittlePauseAction);\n  let updateM = timer.minutes,\n      updateS = timer.seconds;\n  const [reloadStatus, setReloadStatus] = useState(false);\n  useEffect(() => {\n    localStorage.setItem('firstRun', firstRun);\n  }, [firstRun]);\n  useEffect(() => {\n    if (!firstRun) {\n      if (timer !== undefined && timer.minutes !== 0) {\n        localStorage.setItem('timerTime', JSON.stringify(timer));\n      }\n    }\n  }, [timer]);\n  useEffect(() => {\n    if (localStorage.getItem('timerTime')) {\n      let t = JSON.parse(localStorage.getItem('timerTime'));\n      dispatch(setTimeAction({\n        minutes: t.minutes,\n        seconds: t.seconds\n      }));\n    } else {\n      dispatch(resetTimeAction());\n    }\n  }, []);\n  useEffect(() => {\n    if (status.littlePause && reloadStatus) dispatch(setStatusAction({\n      play: true\n    }));\n  }, [status.littlePause]);\n  let date = new Date();\n  let dateToday = `${date.getDate()}.${date.getMonth() < 10 ? `0${date.getMonth()}` : date.getMonth()}.${date.getFullYear()}`; // date.getDate(),date.getMonth()+1,date.getFullYear()\n  // let obj ={\n  //   data:dateToday,\n  //   count:0,\n  // } \n  // let obj2={...obj,count:1}\n  // console.log(obj2)\n  // let elem ='13.01.2022'\n\n  const [stats, setStats] = useState(JSON.parse(localStorage.getItem('stats')) || []);\n\n  const addstats = () => {\n    let newStats = {\n      data: dateToday,\n      count: totalCount + 1\n    };\n    setStats([...stats, newStats]);\n  };\n\n  useEffect(() => {\n    addstats();\n  }, [totalCount]);\n  useEffect(() => {\n    if (stats) {\n      localStorage.setItem('stats', JSON.stringify(stats));\n    }\n  }, [totalCount]);\n  useEffect(() => {\n    let statistics = JSON.parse(localStorage.getItem('stats'));\n    console.log(statistics, 'local');\n    console.log(stats, 'state');\n    console.log(statistics[statistics.length - 1].count);\n    if (statistics.length) dispatch(setTotalCountAction(statistics[statistics.length - 1].count));\n  }, []);\n  useEffect(() => {\n    if (status.play) {\n      if (firstRun) setFirstRun(false);\n      const intervalId = setInterval(() => {\n        if (updateM === 0 && updateS === 1) {\n          setReloadStatus(true);\n          dispatch(setStatusAction({\n            play: !status.play\n          }));\n\n          if (!status.littlePause) {\n            dispatch(timerPauseSetting({\n              status,\n              totalCount\n            }));\n            return clearInterval(intervalId);\n          } else dispatch(defaultTimerSetting());\n\n          return clearInterval(intervalId);\n        }\n\n        if (updateS === 0) {\n          updateS = 60;\n          updateM--;\n        }\n\n        updateS--;\n        dispatch(setTimeAction({\n          minutes: updateM,\n          seconds: updateS\n        }));\n      }, 5);\n      return () => clearInterval(intervalId);\n    }\n  }, [status.play, status.littlePause]);\n\n  const setRun = () => setFirstRun(false);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.timer,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.span_wrapper,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: classes.span,\n        children: timer.minutes >= 10 ? timer.minutes : '0' + timer.minutes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: classes.span,\n        children: \":\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: classes.span,\n        children: timer.seconds >= 10 ? timer.seconds : '0' + timer.seconds\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.img,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.wrapper_img,\n        style: {\n          marginLeft: -(timer.minutes * 60 + timer.seconds)\n        },\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: require('./icon/scale.png'),\n          alt: 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputTimer, {\n      status: status,\n      setFirstRun: setRun\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Timer, \"mu2bdPC4+KHm384aS1K8cMTMWwU=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useLocalStorage];\n});\n\n_c = Timer;\nexport default Timer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"sources":["C:/Users/bouku/Desktop/Time Tracker/time-tracker/src/components/Timer/Timer.jsx"],"names":["React","useState","useEffect","useSelector","useDispatch","setTotalCountAction","setTimeAction","resetTimeAction","setStatusAction","setLittlePauseAction","defaultTimerSetting","timerPauseSetting","useLocalStorage","InputTimer","classes","Timer","dispatch","timer","state","time","status","totalCount","firstRun","setFirstRun","localStorage","getItem","littlePause","updateM","minutes","updateS","seconds","reloadStatus","setReloadStatus","setItem","undefined","JSON","stringify","t","parse","play","date","Date","dateToday","getDate","getMonth","getFullYear","stats","setStats","addstats","newStats","data","count","statistics","console","log","length","intervalId","setInterval","clearInterval","setRun","span_wrapper","span","img","wrapper_img","marginLeft","require"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react';\r\nimport {useSelector,useDispatch} from 'react-redux';\r\nimport {setTotalCountAction} from '../../store/totalCountReducer'\r\nimport { setTimeAction, resetTimeAction} from '../../store/timeReducer';\r\nimport {setStatusAction,setLittlePauseAction} from '../../store/timerStatus'\r\nimport { defaultTimerSetting,timerPauseSetting } from '../../utilites/timerSettings';\r\nimport {useLocalStorage} from '../../hooks/useLocalStorage'\r\n\r\nimport InputTimer from '../../UI/InputTimer/InputTimer';\r\nimport classes from '../Timer/Timer.module.css'\r\n\r\n\r\nconst Timer = () => {\r\n  const dispatch=useDispatch()\r\n  const timer=useSelector((state)=>state.time.timer)\r\n  const status=useSelector((state)=>state.status)\r\n  const totalCount=useSelector((state)=>state.totalCount.totalCount)\r\n  const [firstRun,setFirstRun]=useState(localStorage.getItem('firstRun')||true)\r\n  useLocalStorage('SETTING:LITTLE_PAUSE_STATUS',status.littlePause,setLittlePauseAction)\r\n  let updateM= timer.minutes, updateS=timer.seconds  \r\n  const [reloadStatus,setReloadStatus]=useState(false)\r\n\r\n\r\n  useEffect(() =>{\r\n    localStorage.setItem('firstRun',firstRun)\r\n  },[firstRun])\r\n\r\n\r\n  useEffect(() =>{\r\n    if(!firstRun){\r\n      if(timer!==undefined && timer.minutes!==0) {\r\n        localStorage.setItem('timerTime',JSON.stringify(timer))}\r\n    }\r\n  },[timer])\r\n\r\n  useEffect(() =>{\r\n    if(localStorage.getItem('timerTime')){\r\n      let t= JSON.parse(localStorage.getItem('timerTime'))\r\n      dispatch(setTimeAction({minutes:t.minutes,seconds:t.seconds}))\r\n    } else {\r\n      dispatch(resetTimeAction())\r\n    }\r\n  },[])\r\n\r\n  useEffect(()=>{\r\n    if(status.littlePause&&reloadStatus) dispatch(setStatusAction({play:true}))\r\n  },[status.littlePause])\r\n\r\n  let date= new Date()\r\n  let dateToday= `${date.getDate()}.${date.getMonth()<10?`0${date.getMonth()}`:date.getMonth()}.${date.getFullYear()}`\r\n  // date.getDate(),date.getMonth()+1,date.getFullYear()\r\n  // let obj ={\r\n  //   data:dateToday,\r\n  //   count:0,\r\n  // } \r\n\r\n  // let obj2={...obj,count:1}\r\n\r\n  // console.log(obj2)\r\n  // let elem ='13.01.2022'\r\n\r\n  const [stats,setStats]=useState(JSON.parse(localStorage.getItem('stats'))||[])\r\n\r\n  const addstats= () =>{\r\n    let newStats={\r\n          data:dateToday,\r\n          count:totalCount+1,\r\n    }\r\n    setStats([...stats,newStats])\r\n  }\r\n  \r\n  useEffect(() =>{\r\n    addstats()\r\n  },[totalCount])\r\n\r\nuseEffect(() =>{\r\n  if(stats){\r\n    localStorage.setItem('stats',JSON.stringify(stats))\r\n  }\r\n},[totalCount])\r\n\r\nuseEffect(() =>{\r\n  let statistics=JSON.parse(localStorage.getItem('stats'))\r\n  console.log(statistics,'local')\r\n  console.log(stats,'state')\r\n  console.log(statistics[statistics.length-1].count)\r\n  if(statistics.length) dispatch(setTotalCountAction(statistics[statistics.length-1].count))\r\n},[])\r\n\r\n\r\n\r\n\r\n\r\n useEffect(() =>{\r\n  if(status.play){\r\n    if(firstRun) setFirstRun(false)\r\n    const intervalId = setInterval(()=>{\r\n      if(updateM===0&&updateS===1) {\r\n        setReloadStatus(true)\r\n        dispatch(setStatusAction({play:!status.play}))\r\n        if(!status.littlePause){\r\n          dispatch( timerPauseSetting({status,totalCount}))\r\n          return clearInterval(intervalId)\r\n          }else\r\n          dispatch(defaultTimerSetting())\r\n          return clearInterval(intervalId)\r\n        }\r\n    if(updateS===0) {updateS=60;updateM--}\r\n    updateS--\r\n    dispatch(setTimeAction({minutes:updateM,seconds:updateS}))\r\n    },5);\r\n    return ()=>clearInterval(intervalId)} \r\n },[status.play,status.littlePause])\r\n\r\n  const setRun = () => setFirstRun(false)\r\n\r\n  return (\r\n    <div className={classes.timer} >\r\n      <div className={classes.span_wrapper}>\r\n        <span className={classes.span}>{timer.minutes>=10?timer.minutes:'0'+timer.minutes}</span>\r\n        <span className={classes.span}>:</span>\r\n        <span className={classes.span}>{timer.seconds>=10?timer.seconds:'0'+timer.seconds}</span>\r\n      </div>\r\n      <div className={classes.img} >\r\n        <div className={classes.wrapper_img} style={{marginLeft:-(timer.minutes*60+timer.seconds)}}>\r\n          <img src={require('./icon/scale.png')} alt={1}></img>\r\n        </div>\r\n      </div>\r\n      <InputTimer status={status} setFirstRun={setRun}/>\r\n    </div>\r\n  )};\r\n\r\n\r\nexport default Timer;\r\n"]},"metadata":{},"sourceType":"module"}