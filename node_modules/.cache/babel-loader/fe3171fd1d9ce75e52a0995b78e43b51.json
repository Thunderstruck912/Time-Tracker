{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { dateNow } from \"../utilites/date\";\nconst statsName = \"DATA:STATISTICS\";\nexport const useStats = _ref => {\n  _s();\n\n  let {\n    count,\n    status\n  } = _ref;\n  const [stats, setStats] = useState(JSON.parse(localStorage.getItem(statsName)) || []);\n  useEffect(() => {\n    const newStats = {\n      data: dateNow(),\n      count: count.totalCount + 1\n    };\n    setStats([...stats, newStats]);\n    if (stats && status.reloadStatus) localStorage.setItem(statsName, JSON.stringify(stats));\n  }, [count.totalCount]);\n};\n\n_s(useStats, \"FnWG8+01jZBo8bkQnfwfNUefudc=\");","map":{"version":3,"sources":["C:/Users/bouku/Desktop/Time Tracker/time-tracker/src/hooks/useStats.js"],"names":["React","useState","useEffect","useSelector","useDispatch","dateNow","statsName","useStats","count","status","stats","setStats","JSON","parse","localStorage","getItem","newStats","data","totalCount","reloadStatus","setItem","stringify"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAAQC,OAAR,QAAsB,kBAAtB;AAEA,MAAMC,SAAS,GAAG,iBAAlB;AAEA,OAAO,MAAMC,QAAQ,GAAG,QAAoB;AAAA;;AAAA,MAAnB;AAACC,IAAAA,KAAD;AAAOC,IAAAA;AAAP,GAAmB;AAI3C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CACjCW,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqBT,SAArB,CAAX,KAA+C,EADd,CAAlC;AAGAJ,EAAAA,SAAS,CAAC,MAAM;AACf,UAAMc,QAAQ,GAAG;AAACC,MAAAA,IAAI,EAAEZ,OAAO,EAAd;AAAkBG,MAAAA,KAAK,EAAEA,KAAK,CAACU,UAAN,GAAmB;AAA5C,KAAjB;AACEP,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAUM,QAAV,CAAD,CAAR;AACF,QAAIN,KAAK,IAAID,MAAM,CAACU,YAApB,EACCL,YAAY,CAACM,OAAb,CAAqBd,SAArB,EAAgCM,IAAI,CAACS,SAAL,CAAeX,KAAf,CAAhC;AACD,GALQ,EAKN,CAACF,KAAK,CAACU,UAAP,CALM,CAAT;AAQA,CAfM;;GAAMX,Q","sourcesContent":["import React, {useState, useEffect} from \"react\";\r\nimport {useSelector, useDispatch} from \"react-redux\";\r\nimport {dateNow} from \"../utilites/date\";\r\n\r\nconst statsName = \"DATA:STATISTICS\";\r\n\r\nexport const useStats = ({count,status}) => {\r\n\r\n\r\n\r\n\tconst [stats, setStats] = useState(\r\n\t\tJSON.parse(localStorage.getItem(statsName)) || [],\r\n\t);\r\n\tuseEffect(() => {\r\n\t\tconst newStats = {data: dateNow(), count: count.totalCount + 1};\r\n    setStats([...stats,newStats]);\r\n\t\tif (stats && status.reloadStatus)\r\n\t\t\tlocalStorage.setItem(statsName, JSON.stringify(stats));\r\n\t}, [count.totalCount]);\r\n\r\n\r\n};\r\n"]},"metadata":{},"sourceType":"module"}