{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bouku\\\\Desktop\\\\Time Tracker\\\\time-tracker\\\\src\\\\components\\\\main.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DATA_UNIX = {\n  unixHours: time => {\n    const date = new Date(time * 1000);\n    const hours = date.getHours();\n    const minutes = date.getMinutes() < 10 ? '0' + date.getMinutes() : date.getMinutes();\n    return `${hours}:${minutes}`;\n  },\n  unixDate: date => {\n    const months = ['January', 'February', 'March', 'April', 'May', 'June', 'Jule', 'August', 'September', 'October', 'November', 'December'];\n    const dateDays = new Date(date * 1000);\n    const month = dateDays.getMonth();\n    const day = dateDays.getDate();\n    return `${day} ${months[month]}`;\n  }\n};\nconsole.log(Date.getMinutes(150000));\n\nconst Main = () => {\n  _s();\n\n  const [time, setTime] = useState({\n    minutes: 25,\n    seconds: 0\n  });\n  const [pause, setPause] = useState({\n    minutes: 0,\n    seconds: 30\n  });\n  const [active, setActive] = useState(false);\n  const [interv, setInterv] = useState();\n  const [totalCount, setTotalCount] = useState(0);\n  let updateMin = time.minutes,\n      updateSec = time.seconds;\n\n  const timer = () => {\n    setActive(!active);\n\n    if (!active) {\n      run();\n      setInterv(setInterval(run, 1000));\n      clearInterval(interv);\n    } else {\n      clearInterval(interv);\n    }\n  };\n\n  const run = () => {\n    if (updateMin === 0 && updateSec === 1) {\n      setTotalCount(totalCount + 1);\n      setTime(pause);\n      setActive(false);\n      return;\n    }\n\n    if (updateSec === 0) {\n      updateSec = 60;\n      updateMin--;\n    }\n\n    updateSec--;\n    return setTime({\n      minutes: updateMin,\n      seconds: updateSec\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: time.minutes >= 10 ? time.minutes : '0' + time.minutes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }, this), \":\", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: time.seconds >= 10 ? time.seconds : '0' + time.seconds\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        onClick: timer,\n        value: \"\\u0437\\u0430\\u043F\\u0443\\u0441\\u0442\\u0438\\u0442\\u044C \\u0442\\u0430\\u0439\\u043C\\u0435\\u0440\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"\\u041A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E \\u043F\\u043E\\u043C\\u0438\\u0434\\u043E\\u0440\\u043E\\u043A: \", totalCount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Main, \"6pgIlwyIa98o5fVW7Swz8n1tkbI=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["C:/Users/bouku/Desktop/Time Tracker/time-tracker/src/components/main.jsx"],"names":["React","useState","useEffect","DATA_UNIX","unixHours","time","date","Date","hours","getHours","minutes","getMinutes","unixDate","months","dateDays","month","getMonth","day","getDate","console","log","Main","setTime","seconds","pause","setPause","active","setActive","interv","setInterv","totalCount","setTotalCount","updateMin","updateSec","timer","run","setInterval","clearInterval"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react';\r\n\r\n\r\n\r\n\r\nconst DATA_UNIX = {\r\n  unixHours:(time) =>{\r\n    const date = new Date(time *1000)\r\n    const hours = date.getHours()\r\n    const minutes = date.getMinutes()<10? '0'+date.getMinutes():date.getMinutes()\r\n    return `${hours}:${minutes}`\r\n  },\r\n  unixDate:(date) =>{\r\n    const months = ['January', 'February', 'March', 'April', 'May', 'June','Jule', 'August', 'September', 'October', 'November', 'December'];\r\n    const dateDays = new Date(date *1000)\r\n    const month = dateDays.getMonth()\r\n    const day = dateDays.getDate()\r\n    return `${day} ${months[month]}`\r\n  },\r\n}\r\n\r\nconsole.log(Date.getMinutes(150000))\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst Main = () => {\r\n\r\n  const[time,setTime]=useState({minutes:25 ,seconds:0})\r\n  const[pause,setPause] = useState({minutes:0 ,seconds:30})\r\n\r\n  const[active,setActive]=useState(false)\r\n  const [interv,setInterv]=useState()\r\n\r\n  const [totalCount,setTotalCount]=useState(0)\r\n\r\n  let updateMin= time.minutes, updateSec=time.seconds  \r\n\r\n\r\n\r\n\r\n  const timer=()=>{\r\n    setActive(!active)\r\n    if(!active){\r\n      run()\r\n      setInterv(setInterval(run,1000))\r\n      clearInterval(interv)\r\n    } else {\r\n      clearInterval(interv)\r\n    }\r\n  } \r\n\r\n  const run = ()=>{\r\n    if(updateMin===0&&updateSec===1) {\r\n      setTotalCount(totalCount+1)\r\n      setTime(pause)\r\n      setActive(false)\r\n      return        \r\n    } \r\n    if(updateSec===0){\r\n      updateSec=60\r\n      updateMin--;\r\n    }\r\n    updateSec--\r\n    return setTime({minutes:updateMin,seconds:updateSec})\r\n  }\r\n\r\n\r\n  return <div>\r\n\r\n    <div>\r\n      <span>{time.minutes>=10?time.minutes:'0'+time.minutes}</span>:\r\n      <span>{time.seconds>=10?time.seconds:'0'+time.seconds}</span>\r\n    </div>\r\n\r\n    <div>\r\n      <input type=\"button\" onClick={timer} value='запустить таймер'/>\r\n      <div>Количество помидорок: {totalCount}</div>\r\n      </div>\r\n  </div>;\r\n};\r\n\r\nexport default Main;\r\n"]},"metadata":{},"sourceType":"module"}